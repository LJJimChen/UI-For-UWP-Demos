<!--
	This file contains XAML styles that simplify application development.

	These are not merely convenient, but are required by most Visual Studio project and item templates.
	Removing, renaming, or otherwise modifying the content of these files may result in a project that
	does not build, or that will not build once additional pages are added.  If variations on these
	styles are desired it is recommended that you copy the content under a new name and modify your
	private copy.
-->

<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:common="using:QSF.Common"
	xmlns:converters="using:QSF.Converters"
	xmlns:helpers="using:QSF.Helpers"
	xmlns:selectors="using:QSF.Selectors"
	mc:Ignorable="d">

	<!-- Non-brush values that vary across themes -->
	<!--Override the default LIstView highlight brush-->

	<ResourceDictionary.ThemeDictionaries>
		<ResourceDictionary x:Key="Default">
			<x:String x:Key="BackButtonGlyph">&#xE071;</x:String>
			<x:String x:Key="BackButtonSnappedGlyph">&#xE0BA;</x:String>
		</ResourceDictionary>

		<ResourceDictionary x:Key="HighContrast">
			<x:String x:Key="BackButtonGlyph">&#xE0A6;</x:String>
			<x:String x:Key="BackButtonSnappedGlyph">&#xE0C4;</x:String>
		</ResourceDictionary>
	</ResourceDictionary.ThemeDictionaries>

	<common:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
	<converters:DoubleToDoubleConverter x:Key="DoubleToDoubleConverter"/>
	<converters:DoubleToRectConverter x:Key="DoubleToRectConverter"/>

	<!-- RichTextBlock styles -->

    <SolidColorBrush x:Key="AccentBrush" Color="#2CB144"/>
	<SolidColorBrush x:Key="DescriptionTextForegroundBrush" Color="#FFC1C1C1"/>
	<SolidColorBrush x:Key="MainForegroundBrush" Color="#4f4f4f"/>
	<SolidColorBrush x:Key="SecondaryForegroundBrush" Color="#0066b3"/>
	<SolidColorBrush x:Key="InvertedForegroundBrush" Color="White"/>

	<SolidColorBrush x:Key="ItemInvertedBackgroundBrush" Color="#FF0066B3"/>

	<SolidColorBrush x:Key="ItemBorderBrush" Color="#FFDADADA"/>

	<Style x:Key="BasicRichTextStyle" TargetType="RichTextBlock">
		<Setter Property="Foreground" Value="{StaticResource ApplicationForegroundThemeBrush}"/>
		<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
		<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
		<Setter Property="TextTrimming" Value="WordEllipsis"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="Typography.StylisticSet20" Value="True"/>
		<Setter Property="Typography.DiscretionaryLigatures" Value="True"/>
		<Setter Property="Typography.CaseSensitiveForms" Value="True"/>
	</Style>

	<Style x:Key="BaselineRichTextStyle" TargetType="RichTextBlock" BasedOn="{StaticResource BasicRichTextStyle}">
		<Setter Property="LineHeight" Value="20"/>
		<Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
		<!-- Properly align text along its baseline -->
		<Setter Property="RenderTransform">
			<Setter.Value>
				<TranslateTransform X="-1" Y="4"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ItemRichTextStyle" TargetType="RichTextBlock" BasedOn="{StaticResource BaselineRichTextStyle}"/>

	<Style x:Key="BodyRichTextStyle" TargetType="RichTextBlock" BasedOn="{StaticResource BaselineRichTextStyle}">
		<Setter Property="FontWeight" Value="SemiLight"/>
	</Style>

	<!-- TextBlock styles -->
	<Style x:Key="BasicTextStyle" TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource ApplicationForegroundThemeBrush}"/>
		<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
		<Setter Property="TextTrimming" Value="WordEllipsis"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="Typography.StylisticSet20" Value="True"/>
		<Setter Property="Typography.DiscretionaryLigatures" Value="True"/>
		<Setter Property="Typography.CaseSensitiveForms" Value="True"/>
		<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
	</Style>

	<Style x:Key="BaselineTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BasicTextStyle}">
		<Setter Property="LineHeight" Value="20"/>
		<Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
		<!-- Properly align text along its baseline -->
		<Setter Property="RenderTransform">
			<Setter.Value>
				<TranslateTransform X="-1" Y="4"/>
			</Setter.Value>
		</Setter>
	</Style>
	
	 <Style x:Key="BodyTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="Foreground" Value="{StaticResource MainForegroundBrush}"/>
		<Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
		<Setter Property="TextTrimming" Value="WordEllipsis"/>
		<Setter Property="FontStyle" Value="Normal"/>
	</Style>

	<Style x:Key="HeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
		<Setter Property="FontSize" Value="30"/>
		<Setter Property="FontWeight" Value="Light"/>
		<Setter Property="LineHeight" Value="30"/>
		<Setter Property="Foreground" Value="{StaticResource InvertedForegroundBrush}"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<TranslateTransform X="-2" Y="7"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SubheaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
		<Setter Property="FontSize" Value="26.667"/>
		<Setter Property="FontWeight" Value="Light"/>
		<Setter Property="LineHeight" Value="30"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<TranslateTransform X="-1" Y="6"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TitleTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
		<Setter Property="FontSize" Value="18"/>
		<Setter Property="Foreground" Value="{StaticResource SecondaryForegroundBrush}"/>
	</Style>

	<Style x:Key="BigTitleTextSTyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
		<Setter Property="FontSize" Value="24"/>
		<Setter Property="Foreground" Value="{StaticResource InvertedForegroundBrush}"/>
		<Setter Property="VerticalAlignment" Value="Bottom"/>
	</Style>

	<Style x:Key="SnappedTitleTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
		<Setter Property="FontSize" Value="14.67"/>
		<Setter Property="Foreground" Value="{StaticResource MainForegroundBrush}"/>
	</Style>

	<Style x:Key="ItemTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
		<Setter Property="FontSize" Value="17"/>
		<Setter Property="TextTrimming" Value="WordEllipsis"/>
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="Foreground" Value="{StaticResource MainForegroundBrush}"/>
	</Style>

   

	<Style x:Key="GroupHeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
		<Setter Property="FontSize" Value="28"/>
		<Setter Property="FontWeight" Value="Light"/>
		<Setter Property="FontFamily" Value="Segoe UI"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<TranslateTransform X="-2" Y="3"/>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="CaptionTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="Foreground" Value="{StaticResource InvertedForegroundBrush}"/>
	</Style>

	<!-- Button styles -->

	<!--
		TextButtonStyle is used to style a Button using subheader-styled text with no other adornment.  This
		style is used in the GroupedItemsPage as a group header and in the FileOpenPickerPage for triggering
		commands.
	-->
	
	<Style x:Key="TextButtonStyle" TargetType="Button">
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Background="Transparent">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationPointerOverForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<TextBlock
							x:Name="Text"
							Text="{TemplateBinding Content}"
							Margin="3,-7,3,10"
							TextWrapping="NoWrap"
							Style="{StaticResource SubheaderTextStyle}"/>
						<Rectangle
							x:Name="FocusVisualWhite"
							IsHitTestVisible="False"
							Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
							StrokeEndLineCap="Square"
							StrokeDashArray="1,1"
							Opacity="0"
							StrokeDashOffset="1.5"/>
						<Rectangle
							x:Name="FocusVisualBlack"
							IsHitTestVisible="False"
							Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
							StrokeEndLineCap="Square"
							StrokeDashArray="1,1"
							Opacity="0"
							StrokeDashOffset="0.5"/>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--
		TextRadioButtonStyle is used to style a RadioButton using subheader-styled text with no other adornment.
		This style is used in the SearchResultsPage to allow selection among filters.
	-->
	<Style x:Key="TextRadioButtonStyle" TargetType="RadioButton">
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="Margin" Value="0,0,30,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Grid Background="Transparent">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationPointerOverForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked"/>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationSecondaryForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Indeterminate"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<TextBlock
							x:Name="Text"
							Text="{TemplateBinding Content}"
							Margin="3,-7,3,10"
							TextWrapping="NoWrap"
							Style="{StaticResource SubheaderTextStyle}"/>
						<Rectangle
							x:Name="FocusVisualWhite"
							IsHitTestVisible="False"
							Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
							StrokeEndLineCap="Square"
							StrokeDashArray="1,1"
							Opacity="0"
							StrokeDashOffset="1.5"/>
						<Rectangle
							x:Name="FocusVisualBlack"
							IsHitTestVisible="False"
							Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
							StrokeEndLineCap="Square"
							StrokeDashArray="1,1"
							Opacity="0"
							StrokeDashOffset="0.5"/>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--
		AppBarButtonStyle is used to style a Button for use in an App Bar.  Content will be centered and should fit within
		the 40-pixel radius glyph provided.  16-point Segoe UI Symbol is used for content text to simplify the use of glyphs
		from that font.  AutomationProperties.Name is used for the text below the glyph.
	-->
	<Style x:Key="AppBarButtonStyle" TargetType="Button">
		<Setter Property="Foreground" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="FontFamily" Value="Segoe UI Symbol"/>
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="FontSize" Value="20"/>
		<Setter Property="AutomationProperties.ItemType" Value="App Bar Button"/>
		<Setter Property="UseLayoutRounding" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="RootGrid" Width="100" Background="Transparent">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ApplicationViewStates">
								<VisualState x:Name="FullScreenLandscape"/>
								<VisualState x:Name="Filled"/>
								<VisualState x:Name="FullScreenPortrait">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Snapped">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation
												Storyboard.TargetName="FocusVisualWhite"
												Storyboard.TargetProperty="Opacity"
												To="1"
												Duration="0"/>
										<DoubleAnimation
												Storyboard.TargetName="FocusVisualBlack"
												Storyboard.TargetProperty="Opacity"
												To="1"
												Duration="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="PointerFocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<StackPanel VerticalAlignment="Top" Margin="0,12,0,11">
							<Grid Width="40" Height="40" Margin="0,0,0,5" HorizontalAlignment="Center">
								<TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" FontStyle="Normal" FontWeight="Normal" FontFamily="Segoe UI Symbol" FontSize="53.333" Margin="-4,-19,0,0" Foreground="{StaticResource AppBarItemBackgroundThemeBrush}"/>
								<TextBlock x:Name="OutlineGlyph" Text="&#xE0A7;" FontStyle="Normal" FontWeight="Normal" FontFamily="Segoe UI Symbol" FontSize="53.333" Margin="-4,-19,0,0" Foreground="{StaticResource AppBarItemForegroundThemeBrush}"/>
								<ContentPresenter x:Name="Content" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" Foreground="{StaticResource AppBarItemForegroundThemeBrush}" VerticalAlignment="Center"/>
							</Grid>
							<TextBlock
								x:Name="TextLabel"
								Text="{TemplateBinding AutomationProperties.Name}"
								Foreground="{StaticResource AppBarItemForegroundThemeBrush}"
								Margin="0,0,2,0"
								FontSize="12"
								TextAlignment="Center"
								Width="88"
								MaxHeight="32"
								FontStyle="Normal"
								FontWeight="Normal"
								TextTrimming="WordEllipsis"
								Style="{StaticResource BasicTextStyle}"/>
						</StackPanel>
						<Rectangle
								x:Name="FocusVisualWhite"
								IsHitTestVisible="False"
								Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
								StrokeEndLineCap="Square"
								StrokeDashArray="1,1"
								Opacity="0"
								StrokeDashOffset="1.5"/>
						<Rectangle
								x:Name="FocusVisualBlack"
								IsHitTestVisible="False"
								Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
								StrokeEndLineCap="Square"
								StrokeDashArray="1,1"
								Opacity="0"
								StrokeDashOffset="0.5"/>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="AppBarToggleButtonStyle" TargetType="ToggleButton">
		<Setter Property="Foreground" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="FontFamily" Value="Segoe UI Symbol"/>
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="FontSize" Value="20"/>
		<Setter Property="Padding" Value="-1,-1,0,0"/>
		<Setter Property="UseLayoutRounding" Value="False"/>
		<Setter Property="AutomationProperties.ItemType" Value="App Bar ToggleButton"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid x:Name="RootGrid" Width="100" Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ApplicationViewStates">
								<VisualState x:Name="FullScreenLandscape"/>
								<VisualState x:Name="Filled"/>
								<VisualState x:Name="FullScreenPortrait">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Snapped">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0" Value="0.7"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0" Value="0.9"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0" Value="0.7"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation
												Storyboard.TargetName="FocusVisualWhite"
												Storyboard.TargetProperty="Opacity"
												To="1"
												Duration="0"/>
										<DoubleAnimation
												Storyboard.TargetName="FocusVisualBlack"
												Storyboard.TargetProperty="Opacity"
												To="1"
												Duration="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="PointerFocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<StackPanel VerticalAlignment="Top" Margin="0,12,0,11">
							<Grid Width="40" Height="40" Margin="0,0,0,5" HorizontalAlignment="Center">
								<TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" FontFamily="Segoe UI Symbol" FontSize="53.333" Margin="-4,-19,0,0" Foreground="{StaticResource AppBarItemBackgroundThemeBrush}"/>
								<TextBlock x:Name="OutlineGlyph" Text="&#xE0A7;" FontFamily="Segoe UI Symbol" FontSize="53.333" Margin="-4,-19,0,0" Foreground="{StaticResource AppBarItemForegroundThemeBrush}"/>
								<ContentPresenter x:Name="Content" HorizontalAlignment="Center" Foreground="{StaticResource AppBarItemForegroundThemeBrush}" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
							</Grid>
							<TextBlock
								x:Name="TextLabel"
								Text="{TemplateBinding AutomationProperties.Name}"
								Foreground="{StaticResource AppBarItemForegroundThemeBrush}"
								Margin="0,0,2,0"
								FontSize="12"
								TextAlignment="Center"
								Width="88"
								MaxHeight="32"
								TextTrimming="WordEllipsis"
								Style="{StaticResource BasicTextStyle}"/>
						</StackPanel>
						<Rectangle
								x:Name="FocusVisualWhite"
								IsHitTestVisible="False"
								Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
								StrokeEndLineCap="Square"
								StrokeDashArray="1,1"
								Opacity="0"
								StrokeDashOffset="1.5"/>
						<Rectangle
								x:Name="FocusVisualBlack"
								IsHitTestVisible="False"
								Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
								StrokeEndLineCap="Square"
								StrokeDashArray="1,1"
								Opacity="0"
								StrokeDashOffset="0.5"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="AppBarFavouritesToggleButtonStyle" TargetType="ToggleButton">
		<Setter Property="Foreground" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="FontFamily" Value="Segoe UI Symbol"/>
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="FontSize" Value="20"/>
		<Setter Property="Padding" Value="-1,-1,0,0"/>
		<Setter Property="AutomationProperties.ItemType" Value="App Bar ToggleButton"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid x:Name="RootGrid" Width="100" Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ApplicationViewStates">
								<VisualState x:Name="FullScreenLandscape"/>
								<VisualState x:Name="Filled"/>
								<VisualState x:Name="FullScreenPortrait">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Snapped">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>-->
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0" Value="0.7"/>
										</ObjectAnimationUsingKeyFrames>
										<!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>-->
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="line" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="line" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0" Value="0.7"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="line" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="line" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation
												Storyboard.TargetName="FocusVisualWhite"
												Storyboard.TargetProperty="Opacity"
												To="1"
												Duration="0"/>
										<DoubleAnimation
												Storyboard.TargetName="FocusVisualBlack"
												Storyboard.TargetProperty="Opacity"
												To="1"
												Duration="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="PointerFocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<StackPanel VerticalAlignment="Top" Margin="0,12,0,11">
							<Grid Width="40" Height="40" Margin="0,0,0,5" HorizontalAlignment="Center">
								<TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" FontFamily="Segoe UI Symbol" FontSize="53.333" Margin="-4,-19,0,0" Foreground="{StaticResource AppBarItemBackgroundThemeBrush}"/>
								<TextBlock x:Name="OutlineGlyph" Text="&#xE0A7;" FontFamily="Segoe UI Symbol" FontSize="53.333" Margin="-4,-19,0,0"/>
								<ContentPresenter x:Name="Content" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
								<Rectangle x:Name="line" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Width="2" Height="37" VerticalAlignment="Center" HorizontalAlignment="Center" RenderTransformOrigin="0.5, 0.5">
									<Rectangle.RenderTransform>
										<CompositeTransform Rotation="45"/>
									</Rectangle.RenderTransform>
								</Rectangle>
							</Grid>
							<TextBlock
								x:Name="TextLabel"
								Text="{TemplateBinding AutomationProperties.Name}"
								Foreground="{StaticResource AppBarItemForegroundThemeBrush}"
								Margin="0,0,2,0"
								FontSize="12"
								TextAlignment="Center"
								Width="88"
								MaxHeight="32"
								TextTrimming="WordEllipsis"
								Style="{StaticResource BasicTextStyle}"/>
						</StackPanel>
						<Rectangle
								x:Name="FocusVisualWhite"
								IsHitTestVisible="False"
								Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
								StrokeEndLineCap="Square"
								StrokeDashArray="1,1"
								Opacity="0"
								StrokeDashOffset="1.5"/>
						<Rectangle
								x:Name="FocusVisualBlack"
								IsHitTestVisible="False"
								Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
								StrokeEndLineCap="Square"
								StrokeDashArray="1,1"
								Opacity="0"
								StrokeDashOffset="0.5"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Standard App Bar buttons -->

	<Style x:Key="SkipBackAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="SkipBackAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Skip Back"/>
		<Setter Property="Content" Value="&#xE100;"/>
	</Style>
	<Style x:Key="SkipAheadAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="SkipAheadAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Skip Ahead"/>
		<Setter Property="Content" Value="&#xE101;"/>
	</Style>
	<Style x:Key="PlayAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="PlayAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Play"/>
		<Setter Property="Content" Value="&#xE102;"/>
	</Style>
	<Style x:Key="PauseAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="PauseAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Pause"/>
		<Setter Property="Content" Value="&#xE103;"/>
	</Style>
	<Style x:Key="EditAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="EditAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Edit"/>
		<Setter Property="Content" Value="&#xE104;"/>
	</Style>
	<Style x:Key="SaveAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="SaveAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Save"/>
		<Setter Property="Content" Value="&#xE105;"/>
	</Style>
	<Style x:Key="DeleteAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="DeleteAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Delete"/>
		<Setter Property="Content" Value="&#xE106;"/>
	</Style>
	<Style x:Key="DiscardAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="DiscardAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Discard"/>
		<Setter Property="Content" Value="&#xE107;"/>
	</Style>
	<Style x:Key="RemoveAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="RemoveAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Remove"/>
		<Setter Property="Content" Value="&#xE108;"/>
	</Style>
	<Style x:Key="AddAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="AddAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Add"/>
		<Setter Property="Content" Value="&#xE109;"/>
	</Style>
	<Style x:Key="NoAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="NoAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="No"/>
		<Setter Property="Content" Value="&#xE10A;"/>
	</Style>
	<Style x:Key="YesAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="YesAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Yes"/>
		<Setter Property="Content" Value="&#xE10B;"/>
	</Style>
	<Style x:Key="MoreAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="MoreAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="More"/>
		<Setter Property="Content" Value="&#xE10C;"/>
	</Style>
	<Style x:Key="RedoAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="RedoAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Redo"/>
		<Setter Property="Content" Value="&#xE10D;"/>
	</Style>
	<Style x:Key="UndoAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="UndoAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Undo"/>
		<Setter Property="Content" Value="&#xE10E;"/>
	</Style>
	<Style x:Key="HomeAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="HomeAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Home"/>
		<Setter Property="Content" Value="&#xE10F;"/>
	</Style>
	<Style x:Key="OutAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="OutAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Out"/>
		<Setter Property="Content" Value="&#xE110;"/>
	</Style>
	<Style x:Key="NextAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="NextAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Next"/>
		<Setter Property="Content" Value="&#xE111;"/>
	</Style>
	<Style x:Key="PreviousAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="PreviousAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Previous"/>
		<Setter Property="Content" Value="&#xE112;"/>
	</Style>
	<Style x:Key="FavoriteAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="FavoriteAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Favorite"/>
		<Setter Property="Content" Value="&#xE113;"/>
	</Style>
	<Style x:Key="PhotoAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="PhotoAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Photo"/>
		<Setter Property="Content" Value="&#xE114;"/>
	</Style>
	<Style x:Key="SettingsAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="SettingsAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Settings"/>
		<Setter Property="Content" Value="&#xE115;"/>
	</Style>
	<Style x:Key="VideoAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="VideoAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Video"/>
		<Setter Property="Content" Value="&#xE116;"/>
	</Style>
	<Style x:Key="RefreshAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="RefreshAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Refresh"/>
		<Setter Property="Content" Value="&#xE117;"/>
	</Style>
	<Style x:Key="DownloadAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="DownloadAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Download"/>
		<Setter Property="Content" Value="&#xE118;"/>
	</Style>
	<Style x:Key="MailAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="MailAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Mail"/>
		<Setter Property="Content" Value="&#xE119;"/>
	</Style>
	<Style x:Key="SearchAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="SearchAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Search"/>
		<Setter Property="Content" Value="&#xE11A;"/>
	</Style>
	<Style x:Key="HelpAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="HelpAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Help"/>
		<Setter Property="Content" Value="&#xE11B;"/>
	</Style>
	<Style x:Key="UploadAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="UploadAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Upload"/>
		<Setter Property="Content" Value="&#xE11C;"/>
	</Style>
	<Style x:Key="PinAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="PinAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Pin"/>
		<Setter Property="Content" Value="&#xE141;"/>
	</Style>
	<Style x:Key="UnpinAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="UnpinAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Unpin"/>
		<Setter Property="Content" Value="&#xE196;"/>
	</Style>

	<!-- Title area styles -->

	<Style x:Key="TelerikSpecificPageHeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource HeaderTextStyle}">
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="FontSize" Value="24"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="VerticalAlignment" Value="Bottom"/>
		<Setter Property="Margin" Value="0,0,30,76"/>
		<Setter Property="Foreground" Value="{StaticResource ApplicationHeaderForegroundThemeBrush}"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<TranslateTransform X="0" Y="7"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SnappedTelerikSpecificPageHeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource HeaderTextStyle}">
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="FontSize" Value="18"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="VerticalAlignment" Value="Bottom"/>
		<Setter Property="Margin" Value="0,0,0,45"/>
		<Setter Property="Foreground" Value="{StaticResource ApplicationHeaderForegroundThemeBrush}"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<TranslateTransform X="1" Y="6"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="PageHeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource HeaderTextStyle}">
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="FontSize" Value="42"/>
		<Setter Property="VerticalAlignment" Value="Bottom"/>
		<Setter Property="FontWeight" Value="Light"/>
		<Setter Property="Margin" Value="0,0,30,40"/>
		<Setter Property="Foreground" Value="{StaticResource ApplicationHeaderForegroundThemeBrush}"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<TranslateTransform X="-2" Y="7"/>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="Segoe UI"/>
		<Setter Property="TextTrimming" Value="CharacterEllipsis"/>
	</Style>

	<Style x:Key="PageSubheaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource SubheaderTextStyle}">
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="VerticalAlignment" Value="Bottom"/>
		<Setter Property="Margin" Value="0,0,0,40"/>
	</Style>

	<Style x:Key="SnappedPageHeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource PageHeaderTextStyle}">
		<Setter Property="Foreground" Value="{StaticResource ApplicationHeaderForegroundThemeBrush}"/>
		<Setter Property="FontSize" Value="30"/>
		<Setter Property="Margin" Value="0,0,0,18"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<TranslateTransform X="-1" Y="6"/>
			</Setter.Value>
		</Setter>
	</Style>

	<!--
		BackButtonStyle is used to style a Button for use in the title area of a page.  Margins appropriate for
		the conventional page layout are included as part of the style.
	-->
	<Style x:Key="BackButtonStyle" TargetType="Button">
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="Width" Value="48"/>
		<Setter Property="Height" Value="48"/>
		<Setter Property="Margin" Value="37,0,37,32"/>
		<Setter Property="Padding" Value="0,-17,0,0"/>
		<Setter Property="VerticalAlignment" Value="Bottom"/>
		<Setter Property="FontFamily" Value="Segoe UI Symbol"/>
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="FontSize" Value="56"/>
		<Setter Property="AutomationProperties.AutomationId" Value="BackButton"/>
		<Setter Property="AutomationProperties.Name" Value="Back"/>
		<Setter Property="AutomationProperties.ItemType" Value="Navigation Button"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="RootGrid">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground)" Storyboard.TargetName="BackgroundGlyph">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SecondaryForegroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundGlyph" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ItemInvertedBackgroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation
											Storyboard.TargetName="ArrowGlyph"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0"/>
										<DoubleAnimation
											Storyboard.TargetName="NormalGlyph"
											Storyboard.TargetProperty="Opacity"
											To="0"
											Duration="0"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground)" Storyboard.TargetName="ArrowGlyph">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource InvertedForegroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="FocusVisualWhite"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0"/>
										<DoubleAnimation
											Storyboard.TargetName="FocusVisualBlack"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="PointerFocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid Margin="{TemplateBinding Padding}">
							<TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" Foreground="{StaticResource BackButtonBackgroundThemeBrush}"/>
							<TextBlock x:Name="NormalGlyph" Text="{StaticResource BackButtonGlyph}" Foreground="{StaticResource SecondaryForegroundBrush}"/>
							<TextBlock x:Name="ArrowGlyph" Text="&#xE0A6;" Foreground="{StaticResource BackButtonPressedForegroundThemeBrush}" Opacity="0"/>
						</Grid>
						<Rectangle
							x:Name="FocusVisualWhite"
							IsHitTestVisible="False"
							Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
							StrokeEndLineCap="Square"
							StrokeDashArray="1,1"
							Opacity="0"
							StrokeDashOffset="1.5"/>
						<Rectangle
							x:Name="FocusVisualBlack"
							IsHitTestVisible="False"
							Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
							StrokeEndLineCap="Square"
							StrokeDashArray="1,1"
							Opacity="0"
							StrokeDashOffset="0.5"/>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="SnappedBackButtonStyle" BasedOn="{StaticResource BackButtonStyle}" TargetType="Button">
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="Margin" Value="20,0,0,10"/>
		<Setter Property="Width" Value="36"/>
		<Setter Property="Height" Value="36"/>
		<Setter Property="Padding" Value="0,-11,0,0"/>
		<Setter Property="VerticalAlignment" Value="Bottom"/>
		<Setter Property="FontFamily" Value="Segoe UI Symbol"/>
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="FontSize" Value="40"/>
		<Setter Property="AutomationProperties.AutomationId" Value="BackButton"/>
		<Setter Property="AutomationProperties.Name" Value="Back"/>
		<Setter Property="AutomationProperties.ItemType" Value="Navigation Button"/>
	</Style>

	<Style x:Key="RoundToggleButtonStyle" TargetType="ToggleButton">
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="Width" Value="48"/>
		<Setter Property="Height" Value="48"/>
		<Setter Property="VerticalAlignment" Value="Bottom"/>
		<Setter Property="FontFamily" Value="Segoe UI Symbol"/>
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="FontSize" Value="56"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid x:Name="RootGrid">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.2" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="path">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource InvertedForegroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="path">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource InvertedForegroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="path">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource InvertedForegroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="path">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource InvertedForegroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedDisabled"/>
								<VisualState x:Name="Indeterminate"/>
								<VisualState x:Name="IndeterminatePointerOver"/>
								<VisualState x:Name="IndeterminatePressed"/>
								<VisualState x:Name="IndeterminateDisabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="FocusVisualWhite"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0"/>
										<DoubleAnimation
											Storyboard.TargetName="FocusVisualBlack"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="PointerFocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="border" HorizontalAlignment="Center" Height="42" VerticalAlignment="Center" Width="42" CornerRadius="40" Margin="3" Background="{StaticResource SecondaryForegroundBrush}" Opacity="0"/>

						<Border HorizontalAlignment="Center" Height="42" BorderBrush="{StaticResource SecondaryForegroundBrush}" VerticalAlignment="Center" Width="42" BorderThickness="3" CornerRadius="40" Background="Transparent">
							<ContentControl x:Name="path" VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  Content="{TemplateBinding Content}" Foreground="{StaticResource SecondaryForegroundBrush}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" Margin="{TemplateBinding Padding}"/>
						</Border>

						<Rectangle
							x:Name="FocusVisualWhite"
							IsHitTestVisible="False"
							Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
							StrokeEndLineCap="Square"
							StrokeDashArray="1,1"
							Opacity="0"
							StrokeDashOffset="1.5"/>
						<Rectangle
							x:Name="FocusVisualBlack"
							IsHitTestVisible="False"
							Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
							StrokeEndLineCap="Square"
							StrokeDashArray="1,1"
							Opacity="0"
							StrokeDashOffset="0.5"/>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ConfiguratorButtonStyle" BasedOn="{StaticResource RoundToggleButtonStyle}" TargetType="ToggleButton">
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="Width" Value="48"/>
		<Setter Property="Height" Value="48"/>
		<Setter Property="VerticalAlignment" Value="Bottom"/>
		<Setter Property="FontFamily" Value="Segoe UI Symbol"/>
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="FontSize" Value="56"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid x:Name="RootGrid">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.2" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="path">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource InvertedForegroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="path">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource InvertedForegroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="path">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource InvertedForegroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="path">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource InvertedForegroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedDisabled"/>
								<VisualState x:Name="Indeterminate"/>
								<VisualState x:Name="IndeterminatePointerOver"/>
								<VisualState x:Name="IndeterminatePressed"/>
								<VisualState x:Name="IndeterminateDisabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="FocusVisualWhite"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0"/>
										<DoubleAnimation
											Storyboard.TargetName="FocusVisualBlack"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="PointerFocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="border" HorizontalAlignment="Center" Height="42" VerticalAlignment="Center" Width="42" CornerRadius="40" Margin="3" Background="{StaticResource SecondaryForegroundBrush}" Opacity="0"/>

						<Border HorizontalAlignment="Center" Height="42" BorderBrush="{StaticResource SecondaryForegroundBrush}" VerticalAlignment="Center" Width="42" BorderThickness="3" CornerRadius="40" Background="Transparent">
							<Path x:Name="path" Data="M15.9972,9.599 C15.4272,9.599 14.8861,9.69799 14.3601,9.83699 C13.8151,9.98197 13.3021,10.199 12.7911,10.4909 C11.837,11.0459 11.044,11.8389 10.47,12.8278 C10.197,13.3038 9.97995,13.8177 9.83495,14.3627 C9.69594,14.8876 9.59795,15.4296 9.59795,15.9996 C9.59795,16.5685 9.69594,17.1105 9.83495,17.6355 C9.97995,18.1804 10.197,18.6944 10.489,19.2053 C11.044,20.1583 11.837,20.9522 12.8251,21.5262 C13.3021,21.7992 13.8151,22.0161 14.3601,22.1611 C14.8861,22.3001 15.4272,22.3991 15.9972,22.3991 C16.5382,22.3991 17.0552,22.3111 17.5572,22.1851 C18.0923,22.0492 18.5963,21.8412 19.1623,21.5292 C20.5964,20.7062 21.6784,19.3463 22.1344,17.7114 C22.2874,17.1635 22.3954,16.5965 22.3954,15.9996 C22.3954,15.4016 22.2874,14.8347 22.1344,14.2867 C21.6784,12.6528 20.5964,11.2929 19.0663,10.417 C18.5963,10.157 18.0923,9.94798 17.5572,9.81398 C17.0552,9.68701 16.5382,9.599 15.9972,9.599 z M12.797,0 L19.1961,0 L19.1961,3.65203 C20.3341,3.94705 21.4051,4.39904 22.3941,4.97504 L24.1271,3.24303 L28.6511,7.76805 L26.9301,9.49008 C27.5411,10.5141 28.0331,11.6151 28.3421,12.8001 L31.9941,12.8001 L31.9941,19.1991 L28.3421,19.1991 C28.0341,20.3861 27.5431,21.4881 26.9321,22.5112 L28.6511,24.2312 L24.1271,28.7562 L22.3921,27.0222 C21.4021,27.5972 20.3321,28.0512 19.1961,28.3472 L19.1961,32.0002 L12.797,32.0002 L12.797,28.3472 C11.638,28.0442 10.552,27.5712 9.54401,26.9782 L7.76703,28.7562 L3.24199,24.2312 L5.01799,22.4552 C4.425,21.4481 3.95299,20.3621 3.65199,19.1991 L0,19.1991 L0,12.8001 L3.65199,12.8001 C3.95399,11.6391 4.42699,10.5531 5.02001,9.54608 L3.24199,7.76805 L7.76703,3.24303 L9.54303,5.01904 C10.549,4.42505 11.636,3.95303 12.797,3.65203 z" Height="24" Stretch="Fill" UseLayoutRounding="False" Width="24" Fill="{StaticResource SecondaryForegroundBrush}"/>
						</Border>

						<Rectangle
							x:Name="FocusVisualWhite"
							IsHitTestVisible="False"
							Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
							StrokeEndLineCap="Square"
							StrokeDashArray="1,1"
							Opacity="0"
							StrokeDashOffset="1.5"/>
						<Rectangle
							x:Name="FocusVisualBlack"
							IsHitTestVisible="False"
							Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
							StrokeEndLineCap="Square"
							StrokeDashArray="1,1"
							Opacity="0"
							StrokeDashOffset="0.5"/>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="InfoToggleButtonStyle" TargetType="ToggleButton">
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="VerticalAlignment" Value="Bottom"/>
		<Setter Property="FontFamily" Value="Segoe UI Symbol"/>
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid Background="Transparent" x:Name="RootGrid">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.2" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="path">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource InvertedForegroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="path">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource InvertedForegroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="path">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource InvertedForegroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="path">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource InvertedForegroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedDisabled"/>
								<VisualState x:Name="Indeterminate"/>
								<VisualState x:Name="IndeterminatePointerOver"/>
								<VisualState x:Name="IndeterminatePressed"/>
								<VisualState x:Name="IndeterminateDisabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation
													Storyboard.TargetName="FocusVisualWhite"
													Storyboard.TargetProperty="Opacity"
													To="1"
													Duration="0"/>
										<DoubleAnimation
													Storyboard.TargetName="FocusVisualBlack"
													Storyboard.TargetProperty="Opacity"
													To="1"
													Duration="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="PointerFocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid Width="30" Height="30" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="40,30,40,30">
							<Border x:Name="border" HorizontalAlignment="Center" Height="30" VerticalAlignment="Center" Width="30" CornerRadius="40" Margin="3" Background="{StaticResource SecondaryForegroundBrush}" Opacity="0"/>

							<Border HorizontalAlignment="Center" Height="30" BorderBrush="{StaticResource SecondaryForegroundBrush}" VerticalAlignment="Center" Width="30" BorderThickness="3" CornerRadius="40" Background="Transparent">
								<ContentControl x:Name="path" VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  Content="{TemplateBinding Content}" Foreground="{StaticResource SecondaryForegroundBrush}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" Margin="{TemplateBinding Padding}"/>
							</Border>

							<Rectangle
										x:Name="FocusVisualWhite"
										IsHitTestVisible="False"
										Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
										StrokeEndLineCap="Square"
										StrokeDashArray="1,1"
										Opacity="0"
										StrokeDashOffset="1.5"/>
							<Rectangle
										x:Name="FocusVisualBlack"
										IsHitTestVisible="False"
										Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
										StrokeEndLineCap="Square"
										StrokeDashArray="1,1"
										Opacity="0"
										StrokeDashOffset="0.5"/>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--
		PortraitBackButtonStyle is used to style a Button for use in the title area of a portrait page.  Margins appropriate
		for the conventional page layout are included as part of the style.
	-->
	<Style x:Key="PortraitBackButtonStyle" TargetType="Button" BasedOn="{StaticResource BackButtonStyle}">
		<Setter Property="Margin" Value="26,0,26,36"/>
	</Style>

	<!--
		SnappedBackButtonStyle is used to style a Button for use in the title area of a snapped page.  Margins appropriate
		for the conventional page layout are included as part of the style.
		
		The obvious duplication here is necessary as the glyphs used in snapped are not merely smaller versions of the same
		glyph but are actually distinct.
	-->

	<!-- Item templates -->

	
	<!-- Grid-appropriate 250 pixel square item template as seen in the GroupedItemsPage and ItemsPage -->
	<DataTemplate x:Key="Standard250x250ItemTemplate">
		<Grid HorizontalAlignment="Left" Width="250" Height="250">
			<Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}">
				<Image Source="{Binding Image}" Stretch="UniformToFill"/>
			</Border>
			<StackPanel VerticalAlignment="Bottom" Background="{StaticResource ListViewItemOverlayBackgroundThemeBrush}">
				<TextBlock Text="{Binding Title}" Foreground="{StaticResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextStyle}" Height="60" Margin="15,0,15,0"/>
				<TextBlock Text="{Binding Subtitle}" Foreground="{StaticResource ListViewItemOverlaySecondaryForegroundThemeBrush}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap" Margin="15,0,15,10"/>
			</StackPanel>
		</Grid>
	</DataTemplate>

	<!-- Grid-appropriate 500 by 130 pixel item template as seen in the GroupDetailPage -->
	<DataTemplate x:Key="Standard500x130ItemTemplate">
		<Grid Height="110" Width="480" Margin="10">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Width="110" Height="110">
				<Image Source="{Binding Image}" Stretch="UniformToFill"/>
			</Border>
			<StackPanel Grid.Column="1" VerticalAlignment="Top" Margin="10,0,0,0">
				<TextBlock Text="{Binding Title}" Style="{StaticResource TitleTextStyle}" TextWrapping="NoWrap"/>
				<TextBlock Text="{Binding Subtitle}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap"/>
				<TextBlock Text="{Binding Description}" Style="{StaticResource BodyTextStyle}" MaxHeight="60"/>
			</StackPanel>
		</Grid>
	</DataTemplate>

	<!-- List-appropriate 130 pixel high item template as seen in the SplitPage -->
	<DataTemplate x:Key="Standard130ItemTemplate">
		<Grid Height="110" Margin="6">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Width="110" Height="110">
				<Image Source="{Binding Image}" Stretch="UniformToFill"/>
			</Border>
			<StackPanel Grid.Column="1" VerticalAlignment="Top" Margin="10,0,0,0">
				<TextBlock Text="{Binding Title}" Style="{StaticResource TitleTextStyle}" TextWrapping="NoWrap"/>
				<TextBlock Text="{Binding Subtitle}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap"/>
				<TextBlock Text="{Binding Description}" Style="{StaticResource BodyTextStyle}" MaxHeight="60"/>
			</StackPanel>
		</Grid>
	</DataTemplate>

	<!--
		List-appropriate 80 pixel high item template as seen in the SplitPage when Filled, and
		the following pages when snapped: GroupedItemsPage, GroupDetailPage, and ItemsPage
	-->
	<DataTemplate x:Key="Standard80ItemTemplate">
		<Grid Margin="6">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Width="60" Height="60">
				<Image Source="{Binding Image}" Stretch="UniformToFill"/>
			</Border>
			<StackPanel Grid.Column="1" Margin="10,0,0,0">
				<TextBlock Text="{Binding Title}" Style="{StaticResource ItemTextStyle}" MaxHeight="40"/>
				<TextBlock Text="{Binding Subtitle}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap"/>
			</StackPanel>
		</Grid>
	</DataTemplate>

	<!-- Grid-appropriate 300 by 70 pixel item template as seen in the SearchResultsPage -->
	<DataTemplate x:Key="StandardSmallIcon300x70ItemTemplate">
		<Grid Width="294" Margin="6">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Margin="0,0,0,10" Width="40" Height="40">
				<Image Source="{Binding Image}" Stretch="UniformToFill"/>
			</Border>
			<StackPanel Grid.Column="1" Margin="10,-10,0,0">
				<TextBlock Text="{Binding Title}" Style="{StaticResource BodyTextStyle}" TextWrapping="NoWrap"/>
				<TextBlock Text="{Binding Subtitle}" Style="{StaticResource BodyTextStyle}" Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}" TextWrapping="NoWrap"/>
				<TextBlock Text="{Binding Description}" Style="{StaticResource BodyTextStyle}" Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}" TextWrapping="NoWrap"/>
			</StackPanel>
		</Grid>
	</DataTemplate>

	<!-- List-appropriate 70 pixel high item template as seen in the SearchResultsPage when Snapped -->
	<DataTemplate x:Key="StandardSmallIcon70ItemTemplate">
		<Grid Margin="6">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Margin="0,0,0,10" Width="40" Height="40">
				<Image Source="{Binding Image}" Stretch="UniformToFill"/>
			</Border>
			<StackPanel Grid.Column="1" Margin="10,-10,0,0">
				<TextBlock Text="{Binding Title}" Style="{StaticResource BodyTextStyle}" TextWrapping="NoWrap"/>
				<TextBlock Text="{Binding Subtitle}" Style="{StaticResource BodyTextStyle}" Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}" TextWrapping="NoWrap"/>
				<TextBlock Text="{Binding Description}" Style="{StaticResource BodyTextStyle}" Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}" TextWrapping="NoWrap"/>
			</StackPanel>
		</Grid>
	</DataTemplate>

	<!--
	  190x130 pixel item template for displaying file previews as seen in the FileOpenPickerPage
	  Includes an elaborate tooltip to display title and description text
  -->
	<DataTemplate x:Key="StandardFileWithTooltip190x130ItemTemplate">
		<Grid>
			<ToolTipService.Placement>
				<PlacementMode>Mouse</PlacementMode>
			</ToolTipService.Placement>
			<ToolTipService.ToolTip>
				<ToolTip>
					<ToolTip.Style>
						<Style TargetType="ToolTip">
							<Setter Property="BorderBrush" Value="{StaticResource ToolTipBackgroundThemeBrush}" />
							<Setter Property="Padding" Value="0" />
						</Style>
					</ToolTip.Style>

					<Grid Background="{StaticResource ApplicationPageBackgroundThemeBrush}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>

						<Grid Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Margin="20">
							<Image
								Source="{Binding Image}"
								Width="160"
								Height="160"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								Stretch="Uniform"/>
						</Grid>
						<StackPanel Width="200" Grid.Column="1" Margin="0,20,20,20">
							<TextBlock Text="{Binding Title}" TextWrapping="NoWrap" Style="{StaticResource BodyTextStyle}"/>
							<TextBlock Text="{Binding Description}" MaxHeight="140" Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}" Style="{StaticResource BodyTextStyle}"/>
						</StackPanel>
					</Grid>
				</ToolTip>
			</ToolTipService.ToolTip>
			<Grid Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}">
				<Image
					Source="{Binding Image}"
					Width="190"
					Height="130"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Stretch="Uniform"/>
			</Grid>
		</Grid>
	</DataTemplate>

	<!-- ScrollViewer styles -->

	<Style x:Key="HorizontalScrollViewerStyle" TargetType="ScrollViewer">
		<Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled" />
		<Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled" />
		<Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
	</Style>

	<Style x:Key="VerticalScrollViewerStyle" TargetType="ScrollViewer">
		<Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
		<Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
		<Setter Property="Template">
			<Setter.Value>

				<ControlTemplate TargetType="ScrollViewer">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ScrollingIndicatorStates">
								<VisualStateGroup.Transitions>
									<VisualTransition From="MouseIndicator" To="NoIndicator">
										<Storyboard>
											<FadeOutThemeAnimation TargetName="ScrollBarSeparator" BeginTime="0:0:3" />
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar"
									Storyboard.TargetProperty="IndicatorMode">
												<DiscreteObjectKeyFrame KeyTime="0:0:3">
													<DiscreteObjectKeyFrame.Value>
														<ScrollingIndicatorMode>None</ScrollingIndicatorMode>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar"
									Storyboard.TargetProperty="IndicatorMode">
												<DiscreteObjectKeyFrame KeyTime="0:0:3">
													<DiscreteObjectKeyFrame.Value>
														<ScrollingIndicatorMode>None</ScrollingIndicatorMode>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="TouchIndicator" To="NoIndicator">
										<Storyboard>
											<FadeOutThemeAnimation TargetName="ScrollBarSeparator" />
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar"
									Storyboard.TargetProperty="IndicatorMode">
												<DiscreteObjectKeyFrame KeyTime="0:0:0.5">
													<DiscreteObjectKeyFrame.Value>
														<ScrollingIndicatorMode>None</ScrollingIndicatorMode>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar"
									Storyboard.TargetProperty="IndicatorMode">
												<DiscreteObjectKeyFrame KeyTime="0:0:0.5">
													<DiscreteObjectKeyFrame.Value>
														<ScrollingIndicatorMode>None</ScrollingIndicatorMode>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
								</VisualStateGroup.Transitions>

								<VisualState x:Name="NoIndicator">
									<Storyboard>
										<FadeOutThemeAnimation TargetName="ScrollBarSeparator" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TouchIndicator">
									<Storyboard>
										<FadeOutThemeAnimation TargetName="ScrollBarSeparator" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar"
								Storyboard.TargetProperty="IndicatorMode"
								Duration="0">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<ScrollingIndicatorMode>TouchIndicator</ScrollingIndicatorMode>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar"
								Storyboard.TargetProperty="IndicatorMode"
								Duration="0">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<ScrollingIndicatorMode>TouchIndicator</ScrollingIndicatorMode>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseIndicator">
									<Storyboard>
										<FadeInThemeAnimation TargetName="ScrollBarSeparator" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar"
								Storyboard.TargetProperty="IndicatorMode"
								Duration="0">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar"
								Storyboard.TargetProperty="IndicatorMode"
								Duration="0">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid Background="{TemplateBinding Background}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<ScrollContentPresenter x:Name="ScrollContentPresenter"
					Grid.RowSpan="2"
					Grid.ColumnSpan="2"
					ContentTemplate="{TemplateBinding ContentTemplate}"
					Margin="{TemplateBinding Padding}" />
							<ScrollBar x:Name="VerticalScrollBar"
					Grid.Column="1"
					IsTabStop="False"
					Maximum="{TemplateBinding ScrollableHeight}"
					Orientation="Vertical"
					Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
					Value="{TemplateBinding VerticalOffset}"
					ViewportSize="{TemplateBinding ViewportHeight}"
					HorizontalAlignment="Right" FontFamily="Global User Interface" IndicatorMode="TouchIndicator"/>
							<ScrollBar x:Name="HorizontalScrollBar"
					IsTabStop="False"
					Maximum="{TemplateBinding ScrollableWidth}"
					Orientation="Horizontal"
					Grid.Row="1"
					Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
					Value="{TemplateBinding HorizontalOffset}"
					ViewportSize="{TemplateBinding ViewportWidth}" />
							<Border x:Name="ScrollBarSeparator"
					Grid.Row="1"
					Grid.Column="1"
					BorderThickness="0,0,1,1"
					Background="{StaticResource ScrollBarTrackBackgroundThemeBrush}"
					BorderBrush="{StaticResource ScrollBarTrackBorderThemeBrush}" />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Page layout roots typically use entrance animations and a theme-appropriate background color -->

	<Style x:Key="LayoutRootStyle" TargetType="Panel">

		<Setter Property="ChildrenTransitions">
			<Setter.Value>
				<TransitionCollection>
					<EntranceThemeTransition/>
				</TransitionCollection>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- LISTVIEW ITEM STYLES -->
	<Style x:Key="BaseListViewItemStyle" TargetType="ListViewItem">
		<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="TabNavigation" Value="Local"/>
		<Setter Property="IsHoldingEnabled" Value="True"/>
		<Setter Property="Margin" Value="0,0,18,2"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListViewItem">
					<Border x:Name="OuterContainer">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<PointerDownThemeAnimation TargetName="ContentContainer"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOverPressed">
									<Storyboard>
										<PointerDownThemeAnimation TargetName="ContentContainer"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="PointerFocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionHintStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.65" To="NoSelectionHint"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="VerticalSelectionHint">
									<Storyboard>
										<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="ContentBorder" ToVerticalOffset="15"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HorizontalSelectionHint">
									<Storyboard>
										<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="ContentBorder" ToVerticalOffset="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NoSelectionHint"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="UnselectedSwiping"/>
								<VisualState x:Name="Selecting">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedSwiping">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unselecting"/>
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="SelectedUnfocused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DragStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="NotDragging"/>
								<VisualState x:Name="Dragging">
									<Storyboard>
										<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InnerDragContent"/>
										<DragItemThemeAnimation TargetName="InnerDragContent"/>
										<FadeOutThemeAnimation TargetName="SelectedBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DraggingTarget">
									<Storyboard>
										<DropTargetItemThemeAnimation TargetName="OuterContainer"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultipleDraggingPrimary">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayBackground"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayText"/>
										<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentBorder"/>
										<FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground"/>
										<FadeInThemeAnimation TargetName="MultiArrangeOverlayText"/>
										<DragItemThemeAnimation TargetName="ContentBorder"/>
										<FadeOutThemeAnimation TargetName="SelectedBorder"/>
										<FadeOutThemeAnimation TargetName="PointerOverBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultipleDraggingSecondary">
									<Storyboard>
										<FadeOutThemeAnimation TargetName="ContentContainer"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ReorderHintStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="NoReorderHint"/>
								<VisualState x:Name="BottomReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Bottom" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Top" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="RightReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Right" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="LeftReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Left" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DataVirtualizationStates">
								<VisualState x:Name="DataAvailable"/>
								<VisualState x:Name="DataPlaceholder">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderTextBlock">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderRect">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="ReorderHintContent" Background="Transparent">
							<Border x:Name="ContentContainer">
								<Grid x:Name="InnerDragContent">
									<Rectangle x:Name="PointerOverBorder" IsHitTestVisible="False" Fill="#4CFFFFFF" Margin="1" Opacity="0"/>
									<Rectangle x:Name="SelectedBorder" IsHitTestVisible="False"  Stroke="White" StrokeThickness="2" Margin="1" Opacity="0"/>
									<Rectangle x:Name="FocusVisual" IsHitTestVisible="False"  Stroke="White" StrokeThickness="2" Margin="1" Opacity="0"/>
									<Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="4">
										<Grid>
											<ContentPresenter x:Name="contentPresenter" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
											<TextBlock x:Name="PlaceholderTextBlock" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Text="Xg" Visibility="Collapsed"/>
											<Rectangle x:Name="PlaceholderRect" Fill="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" IsHitTestVisible="False" Visibility="Collapsed"/>
											<Rectangle x:Name="MultiArrangeOverlayBackground" Fill="{StaticResource ListViewItemDragBackgroundThemeBrush}" IsHitTestVisible="False" Opacity="0"/>
										</Grid>
									</Border>
									<TextBlock x:Name="MultiArrangeOverlayText" Foreground="{StaticResource ListViewItemDragForegroundThemeBrush}" FontSize="26.667" FontFamily="{StaticResource ContentControlThemeFontFamily}" IsHitTestVisible="False" Margin="18,9,0,0" Opacity="0" TextWrapping="Wrap" Text="{Binding TemplateSettings.DragItemsCount, RelativeSource={RelativeSource Mode=TemplatedParent}}" TextTrimming="WordEllipsis"/>
								</Grid>
							</Border>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="GridViewItemStyle" TargetType="GridViewItem">
		<Setter Property="Margin" Value="0,0,2,2"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridViewItem">
					<Border x:Name="OuterContainer">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectionBackground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SelectedBorder">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<PointerDownThemeAnimation TargetName="ContentContainer"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOverPressed">
									<Storyboard>
										<PointerDownThemeAnimation TargetName="ContentContainer"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectionBackground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SelectedBorder">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDisabledThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="PointerFocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionHintStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.65" To="NoSelectionHint"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="VerticalSelectionHint">
									<Storyboard>
										<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectionBackground" ToVerticalOffset="15"/>
										<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="ContentBorder" ToVerticalOffset="15"/>
										<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectedBorder" ToVerticalOffset="15"/>
										<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectedCheckMark" ToVerticalOffset="15"/>
										<DoubleAnimationUsingKeyFrames Duration="0:0:0.500" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyph">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
											<DiscreteDoubleKeyFrame KeyTime="0:0:0.500" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HorizontalSelectionHint">
									<Storyboard>
										<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectionBackground" ToVerticalOffset="0"/>
										<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="ContentBorder" ToVerticalOffset="0"/>
										<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectedBorder" ToVerticalOffset="0"/>
										<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectedCheckMark" ToVerticalOffset="0"/>
										<DoubleAnimationUsingKeyFrames Duration="0:0:0.500" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyph">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
											<DiscreteDoubleKeyFrame KeyTime="0:0:0.500" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NoSelectionHint"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselecting">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unselected">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="UnselectedPointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="UnselectedSwiping">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectingGlyph"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Selecting">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectingGlyph"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedSwiping">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedUnfocused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DragStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="NotDragging"/>
								<VisualState x:Name="Dragging">
									<Storyboard>
										<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InnerDragContent"/>
										<DragItemThemeAnimation TargetName="InnerDragContent"/>
										<FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
										<FadeOutThemeAnimation TargetName="SelectedBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DraggingTarget">
									<Storyboard>
										<DropTargetItemThemeAnimation TargetName="OuterContainer"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultipleDraggingPrimary">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayBackground"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayText"/>
										<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentBorder"/>
										<FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground"/>
										<FadeInThemeAnimation TargetName="MultiArrangeOverlayText"/>
										<DragItemThemeAnimation TargetName="ContentBorder"/>
										<FadeOutThemeAnimation TargetName="SelectionBackground"/>
										<FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
										<FadeOutThemeAnimation TargetName="SelectedBorder"/>
										<FadeOutThemeAnimation TargetName="PointerOverBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultipleDraggingSecondary">
									<Storyboard>
										<FadeOutThemeAnimation TargetName="ContentContainer"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ReorderHintStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="NoReorderHint"/>
								<VisualState x:Name="BottomReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Bottom" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Top" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="RightReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Right" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="LeftReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Left" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DataVirtualizationStates">
								<VisualState x:Name="DataAvailable"/>
								<VisualState x:Name="DataPlaceholder">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderTextBlock">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderRect">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="ReorderHintContent" Background="Transparent">
							<Path x:Name="SelectingGlyph" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckSelectingThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,9.5,9.5,0" Opacity="0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
							<Border x:Name="HintGlyphBorder" HorizontalAlignment="Right" Height="40" Margin="4" Opacity="0" VerticalAlignment="Top" Width="40">
								<Path x:Name="HintGlyph" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckHintThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,5.5,5.5,0" Opacity="0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
							</Border>
							<Border x:Name="ContentContainer">
								<Grid x:Name="InnerDragContent">
									<Rectangle x:Name="PointerOverBorder" Fill="{StaticResource ListViewItemPointerOverBackgroundThemeBrush}" IsHitTestVisible="False" Margin="1" Opacity="0"/>
									<Rectangle x:Name="FocusVisual" IsHitTestVisible="False" Opacity="0" Stroke="{StaticResource ListViewItemFocusBorderThemeBrush}" StrokeThickness="2"/>
									<Rectangle x:Name="SelectionBackground" Fill="{StaticResource ListViewItemSelectedBackgroundThemeBrush}" Margin="4" Opacity="0"/>
									<Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="4">
										<Grid>
											<ContentPresenter x:Name="contentPresenter" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
											<TextBlock x:Name="PlaceholderTextBlock" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Text="Xg" Visibility="Collapsed"/>
											<Rectangle x:Name="PlaceholderRect" Fill="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" IsHitTestVisible="False" Visibility="Collapsed"/>
											<Rectangle x:Name="MultiArrangeOverlayBackground" Fill="{StaticResource ListViewItemDragBackgroundThemeBrush}" IsHitTestVisible="False" Opacity="0"/>
										</Grid>
									</Border>
									<Rectangle x:Name="SelectedBorder" IsHitTestVisible="False" Margin="4" Opacity="0" Stroke="{StaticResource ListViewItemSelectedBackgroundThemeBrush}" StrokeThickness="{StaticResource GridViewItemSelectedBorderThemeThickness}"/>
									<Border x:Name="SelectedCheckMarkOuter" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="4" VerticalAlignment="Top" Visibility="Collapsed">
										<Grid x:Name="SelectedCheckMark" Height="40" Opacity="0" Width="40">
											<Path x:Name="SelectedEarmark" Data="M0,0 L40,0 L40,40 z" Fill="{StaticResource ListViewItemSelectedBackgroundThemeBrush}" Stretch="Fill"/>
											<Path Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,5.5,5.5,0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
										</Grid>
									</Border>
									<TextBlock x:Name="MultiArrangeOverlayText" Foreground="{StaticResource ListViewItemDragForegroundThemeBrush}" FontSize="26.667" FontFamily="{StaticResource ContentControlThemeFontFamily}" IsHitTestVisible="False" Margin="18,9,0,0" Opacity="0" TextWrapping="Wrap" Text="{Binding TemplateSettings.DragItemsCount, RelativeSource={RelativeSource Mode=TemplatedParent}}" TextTrimming="WordEllipsis"/>
								</Grid>
							</Border>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="FeaturedAppGridViewItemStyle" TargetType="GridViewItem">
		<Setter Property="Margin" Value="0,0,32,32"/>
	</Style>

	<DataTemplate x:Key="ZoomedOutViewGridViewItemTemplate">
		<Grid Width="240" Height="50" Background="{StaticResource ItemInvertedBackgroundBrush}">
			<Border BorderThickness="1" BorderBrush="#33FFFFFF">
				<Grid>
					<TextBlock Margin="20,0" Text="{Binding ExampleInfo.HeaderText}" Style="{StaticResource TitleTextStyle}" VerticalAlignment="Center" HorizontalAlignment="Left"/>

					<!--Favourite mark-->
					<TextBlock Margin="0 0 8 0" Text="&#xE0B4;" FontFamily="Segoe UI Symbol" VerticalAlignment="Center" HorizontalAlignment="Right" 
							   Visibility="{Binding ExampleInfo.IsFavourite, Converter={StaticResource BooleanToVisibilityConverter}}" />
				</Grid>
			</Border>
		</Grid>
	</DataTemplate>


	<Style x:Key="SearchResultsViewSnappedListVeiwStyle" TargetType="ListView">
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="TabNavigation" Value="Once"/>
		<Setter Property="IsSwipeEnabled" Value="False"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
		<Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False"/>
		<Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled"/>
		<Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False"/>
		<Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
		<Setter Property="AutomationProperties.Name" Value="Grouped Items"/>
		<Setter Property="AutomationProperties.AutomationId" Value="ItemListView"/>
		<Setter Property="IsItemClickEnabled" Value="True"/>
		<Setter Property="Padding" Value="16,6,0,36"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource BaseListViewItemStyle}"/>
		<Setter Property="ItemContainerTransitions">
			<Setter.Value>
				<TransitionCollection>
					<AddDeleteThemeTransition/>
					<ContentThemeTransition/>
					<ReorderThemeTransition/>
					<EntranceThemeTransition IsStaggeringEnabled="False"/>
				</TransitionCollection>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Vertical"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListView">
					<ScrollViewer x:Name="ScrollViewer" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}" IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" TabNavigation="{TemplateBinding TabNavigation}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
						<ItemsPresenter HeaderTemplate="{TemplateBinding HeaderTemplate}" Header="{TemplateBinding Header}" HeaderTransitions="{TemplateBinding HeaderTransitions}" Padding="{TemplateBinding Padding}"/>
					</ScrollViewer>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	

	<Style x:Key="HomeViewSnappedListVeiwStyle" TargetType="ListView" BasedOn="{StaticResource SearchResultsViewSnappedListVeiwStyle}">
		<Setter Property="Margin" Value="16,60,0,0"/>
	</Style>

	<!-- GRIDVIEW ITEM STYLES -->
	<Style x:Key="BaseGridViewItemStyle" TargetType="GridViewItem">
		<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="TabNavigation" Value="Local"/>
		<Setter Property="IsHoldingEnabled" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridViewItem">
					<Border x:Name="OuterContainer">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<PointerDownThemeAnimation TargetName="ContentContainer"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOverPressed">
									<Storyboard>
										<PointerDownThemeAnimation TargetName="ContentContainer"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="PointerFocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionHintStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.65" To="NoSelectionHint"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="VerticalSelectionHint">
									<Storyboard>
										<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="ContentBorder" ToVerticalOffset="15"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HorizontalSelectionHint">
									<Storyboard>
										<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="ContentBorder" ToVerticalOffset="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NoSelectionHint"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="UnselectedSwiping"/>
								<VisualState x:Name="Selecting">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedSwiping">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unselecting"/>
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="SelectedUnfocused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DragStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="NotDragging"/>
								<VisualState x:Name="Dragging">
									<Storyboard>
										<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InnerDragContent"/>
										<DragItemThemeAnimation TargetName="InnerDragContent"/>
										<FadeOutThemeAnimation TargetName="SelectedBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DraggingTarget">
									<Storyboard>
										<DropTargetItemThemeAnimation TargetName="OuterContainer"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultipleDraggingPrimary">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayBackground"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayText"/>
										<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentBorder"/>
										<FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground"/>
										<FadeInThemeAnimation TargetName="MultiArrangeOverlayText"/>
										<DragItemThemeAnimation TargetName="ContentBorder"/>
										<FadeOutThemeAnimation TargetName="SelectedBorder"/>
										<FadeOutThemeAnimation TargetName="PointerOverBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultipleDraggingSecondary">
									<Storyboard>
										<FadeOutThemeAnimation TargetName="ContentContainer"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ReorderHintStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="NoReorderHint"/>
								<VisualState x:Name="BottomReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Bottom" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Top" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="RightReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Right" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="LeftReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Left" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DataVirtualizationStates">
								<VisualState x:Name="DataAvailable"/>
								<VisualState x:Name="DataPlaceholder">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderTextBlock">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderRect">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="ReorderHintContent" Background="Transparent">
							<Border x:Name="ContentContainer">
								<Grid x:Name="InnerDragContent">
									<Rectangle x:Name="PointerOverBorder" IsHitTestVisible="False" Fill="{StaticResource ItemInvertedBackgroundBrush}" Margin="0" Opacity="0"/>
									<Rectangle x:Name="SelectedBorder" IsHitTestVisible="False"  Stroke="White" StrokeThickness="2" Margin="0" Opacity="0"/>
									<Rectangle x:Name="FocusVisual" IsHitTestVisible="False" Visibility="Collapsed" Stroke="White" StrokeThickness="2" Margin="1" Opacity="0"/>
									<Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="3">
										<Grid>
											<ContentPresenter x:Name="contentPresenter" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
											<TextBlock x:Name="PlaceholderTextBlock" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Text="Xg" Visibility="Collapsed"/>
											<Rectangle x:Name="PlaceholderRect" Fill="White" IsHitTestVisible="False" Visibility="Collapsed"/>
											<Rectangle x:Name="MultiArrangeOverlayBackground" Fill="White" IsHitTestVisible="False" Opacity="0"/>
										</Grid>
									</Border>
									<TextBlock x:Name="MultiArrangeOverlayText" Foreground="{StaticResource ListViewItemDragForegroundThemeBrush}" FontSize="26.667" FontFamily="{StaticResource ContentControlThemeFontFamily}" IsHitTestVisible="False" Margin="18,9,0,0" Opacity="0" TextWrapping="Wrap" Text="{Binding TemplateSettings.DragItemsCount, RelativeSource={RelativeSource Mode=TemplatedParent}}" TextTrimming="WordEllipsis"/>
								</Grid>
							</Border>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="MainBackgroundBrush" Color="White"/>
	<SolidColorBrush x:Key="MainBorderBrush" Color="#FFB2B2B2"/>
	<SolidColorBrush x:Key="ItemBackgroundBrush" Color="WhiteSmoke"/>

	<Style x:Key="HomeViewGridViewItemStyle" BasedOn="{StaticResource BaseGridViewItemStyle}" TargetType="GridViewItem">
		<Setter Property="Margin" Value="0,0,4,4"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridViewItem">
					<Border x:Name="OuterContainer">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<PointerDownThemeAnimation TargetName="ContentContainer"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOverPressed">
									<Storyboard>
										<PointerDownThemeAnimation TargetName="ContentContainer"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="PointerFocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionHintStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.65" To="NoSelectionHint"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="VerticalSelectionHint">
									<Storyboard>
										<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="ContentBorder" ToVerticalOffset="15"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HorizontalSelectionHint">
									<Storyboard>
										<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="ContentBorder" ToVerticalOffset="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NoSelectionHint"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="UnselectedSwiping"/>
								<VisualState x:Name="Selecting">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedSwiping">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unselecting"/>
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="SelectedUnfocused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DragStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="NotDragging"/>
								<VisualState x:Name="Dragging">
									<Storyboard>
										<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InnerDragContent"/>
										<DragItemThemeAnimation TargetName="InnerDragContent"/>
										<FadeOutThemeAnimation TargetName="SelectedBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DraggingTarget">
									<Storyboard>
										<DropTargetItemThemeAnimation TargetName="OuterContainer"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultipleDraggingPrimary">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayBackground"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayText"/>
										<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentBorder"/>
										<FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground"/>
										<FadeInThemeAnimation TargetName="MultiArrangeOverlayText"/>
										<DragItemThemeAnimation TargetName="ContentBorder"/>
										<FadeOutThemeAnimation TargetName="SelectedBorder"/>
										<FadeOutThemeAnimation TargetName="PointerOverBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultipleDraggingSecondary">
									<Storyboard>
										<FadeOutThemeAnimation TargetName="ContentContainer"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ReorderHintStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="NoReorderHint"/>
								<VisualState x:Name="BottomReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Bottom" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Top" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="RightReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Right" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="LeftReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Left" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DataVirtualizationStates">
								<VisualState x:Name="DataAvailable"/>
								<VisualState x:Name="DataPlaceholder">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderTextBlock">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderRect">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="ReorderHintContent" Background="Transparent">
							<Border x:Name="ContentContainer">
								<Grid x:Name="InnerDragContent">
									<Rectangle x:Name="PointerOverBorder" IsHitTestVisible="False" Fill="{StaticResource ListViewItemPointerOverBackgroundThemeBrush}" Margin="0" Opacity="0"/>
									<Rectangle Fill="{StaticResource ItemInvertedBackgroundBrush}" HorizontalAlignment="Right" Height="40" VerticalAlignment="Bottom" Width="40" Margin="0,0,6,6"/>
									<Path x:Name="background" Fill="{StaticResource MainBackgroundBrush}" IsHitTestVisible="False" Margin="3" Stretch="Fill" UseLayoutRounding="False" Stroke="{TemplateBinding BorderBrush}" Data="M0,0 L150,0 L150,110 L110,150 L0,150 z"/>
									<Rectangle Fill="{StaticResource ItemBackgroundBrush}" VerticalAlignment="Top" Height="105" Margin="6,6,6,0"/>
									<Rectangle x:Name="SelectedBorder" IsHitTestVisible="False"  Stroke="{StaticResource ItemInvertedBackgroundBrush}" StrokeThickness="3" Margin="3" Opacity="0"/>
									<Rectangle x:Name="FocusVisual" IsHitTestVisible="False" Stroke="{StaticResource ItemInvertedBackgroundBrush}" StrokeThickness="3" Margin="3" Opacity="0"/>
									<Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="3">
										<Grid>
											<ContentPresenter x:Name="contentPresenter" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
											<TextBlock x:Name="PlaceholderTextBlock" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Text="Xg" Visibility="Collapsed"/>
											<Rectangle x:Name="PlaceholderRect" Fill="White" IsHitTestVisible="False" Visibility="Collapsed"/>
											<Rectangle x:Name="MultiArrangeOverlayBackground" Fill="White" IsHitTestVisible="False" Opacity="0"/>
										</Grid>
									</Border>
									<TextBlock x:Name="MultiArrangeOverlayText" Foreground="{StaticResource ListViewItemDragForegroundThemeBrush}" FontSize="26.667" FontFamily="{StaticResource ContentControlThemeFontFamily}" IsHitTestVisible="False" Margin="18,9,0,0" Opacity="0" TextWrapping="Wrap" Text="{Binding TemplateSettings.DragItemsCount, RelativeSource={RelativeSource Mode=TemplatedParent}}" TextTrimming="WordEllipsis"/>
								</Grid>
							</Border>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Width" Value="156"/>
		<Setter Property="Height" Value="156"/>
		<Setter Property="BorderBrush" Value="{StaticResource MainBorderBrush}"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
	</Style>

	<Style x:Key="SearchResultsViewGridViewItemStyle" BasedOn="{StaticResource BaseGridViewItemStyle}" TargetType="GridViewItem">
		<Setter Property="Margin" Value="160,0,0,12"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
	</Style>

	<Style x:Key="ZoomedOutViewGridViewItemStyle" BasedOn="{StaticResource BaseGridViewItemStyle}" TargetType="GridViewItem">
		<Setter Property="Margin" Value="0,0,1,1"/>
	</Style>

	<Style x:Key="EmptyGridViewItemStyle" TargetType="GridViewItem">
		<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="TabNavigation" Value="Local"/>
		<Setter Property="IsHoldingEnabled" Value="True"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridViewItem">
					<Border x:Name="OuterContainer" Padding="0">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver"/>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="PointerOverPressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="PointerFocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionHintStates">
								<VisualState x:Name="VerticalSelectionHint"/>
								<VisualState x:Name="HorizontalSelectionHint"/>
								<VisualState x:Name="NoSelectionHint"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="UnselectedSwiping"/>
								<VisualState x:Name="Selecting"/>
								<VisualState x:Name="Selected"/>
								<VisualState x:Name="SelectedSwiping"/>
								<VisualState x:Name="Unselecting"/>
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="SelectedUnfocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DragStates">
								<VisualState x:Name="NotDragging"/>
								<VisualState x:Name="Dragging"/>
								<VisualState x:Name="DraggingTarget"/>
								<VisualState x:Name="MultipleDraggingPrimary"/>
								<VisualState x:Name="MultipleDraggingSecondary"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ReorderHintStates">
								<VisualState x:Name="NoReorderHint"/>
								<VisualState x:Name="BottomReorderHint"/>
								<VisualState x:Name="TopReorderHint"/>
								<VisualState x:Name="RightReorderHint"/>
								<VisualState x:Name="LeftReorderHint"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DataVirtualizationStates">
								<VisualState x:Name="DataAvailable"/>
								<VisualState x:Name="DataPlaceholder"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Stretch"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- GRIDVIEW ITEM STYLES -->

	<Style x:Key="EmptyGridViewStyle" TargetType="GridView">
		<Setter Property="Padding" Value="0"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="TabNavigation" Value="Once"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
		<Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False"/>
		<Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled"/>
		<Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False"/>
		<Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
		<Setter Property="IsSwipeEnabled" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridView">
					<ScrollViewer x:Name="ScrollViewer" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}" IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" TabNavigation="{TemplateBinding TabNavigation}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
						<ItemsPresenter Margin="0" Padding="0">
						</ItemsPresenter>
					</ScrollViewer>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="BasePortraitGridViewStyle" TargetType="GridView">
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="TabNavigation" Value="Once"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
		<Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False"/>
		<Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled"/>
		<Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"/>
		<Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
		<Setter Property="IsSwipeEnabled" Value="True"/>
		<Setter Property="AutomationProperties.Name" Value="Grouped Items"/>
		<Setter Property="AutomationProperties.AutomationId" Value="ItemGridView"/>
		<Setter Property="IsItemClickEnabled" Value="True"/>
		<Setter Property="ItemContainerTransitions">
			<Setter.Value>
				<TransitionCollection>
					<AddDeleteThemeTransition/>
					<ContentThemeTransition/>
					<ReorderThemeTransition/>
					<EntranceThemeTransition IsStaggeringEnabled="False"/>
				</TransitionCollection>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Vertical"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridView">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
						<ScrollViewer x:Name="ScrollViewer" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}" IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" TabNavigation="{TemplateBinding TabNavigation}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
							<ItemsPresenter HeaderTemplate="{TemplateBinding HeaderTemplate}" Header="{TemplateBinding Header}" HeaderTransitions="{TemplateBinding HeaderTransitions}" Padding="{TemplateBinding Padding}"/>
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="BaseLandscapeGridViewStyle" TargetType="GridView">
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="TabNavigation" Value="Once"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled"/>
		<Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False"/>
		<Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled"/>
		<Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False"/>
		<Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
		<Setter Property="AutomationProperties.Name" Value="Grouped Items"/>
		<Setter Property="AutomationProperties.AutomationId" Value="ItemGridView"/>
		<Setter Property="IsItemClickEnabled" Value="True"/>
		<Setter Property="IsSwipeEnabled" Value="True"/>
		<Setter Property="SelectionMode" Value="None"/>
		<Setter Property="ItemContainerTransitions">
			<Setter.Value>
				<TransitionCollection>
					<AddDeleteThemeTransition/>
					<ContentThemeTransition/>
					<ReorderThemeTransition/>
					<EntranceThemeTransition IsStaggeringEnabled="False"/>
				</TransitionCollection>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemContainerStyle" Value="{StaticResource GridViewItemStyle}"/>
	</Style>

	<Style x:Key="HomeViewLandscapeGridViewStyle" BasedOn="{StaticResource BaseLandscapeGridViewStyle}" TargetType="GridView">
		<Setter Property="Padding" Value="116,70,0,70"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource HomeViewGridViewItemStyle}"/>
	</Style>

   
	
	<Style x:Key="HomeViewGridViewStyle" BasedOn="{StaticResource BaseLandscapeGridViewStyle}" TargetType="GridView">
		<Setter Property="Margin" Value="-3,0,100,0"/>
		<Setter Property="Padding" Value="0,185,0,80"/>
		<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
		<Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource HomeViewGridViewItemStyle}"/>
		<Setter Property="SelectionMode" Value="None"/>
	</Style>

	<Style x:Key="ExampleViewLandscapeGridViewStyle" BasedOn="{StaticResource BaseLandscapeGridViewStyle}" TargetType="GridView">
		<Setter Property="Padding" Value="116,160,0,80"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource ZoomedOutViewGridViewItemStyle}"/>
		<Setter Property="ItemTemplate" Value="{StaticResource ZoomedOutViewGridViewItemTemplate}"/>
	</Style>

	
	<Style x:Key="SnappedGridViewItemStyle" TargetType="GridViewItem">
		<Setter Property="Margin" Value="16,0,0,2"/>
	</Style>

	<Style x:Key="ExamplesGridViewStyle" BasedOn="{StaticResource BaseLandscapeGridViewStyle}" TargetType="GridView">
		<Setter Property="Padding" Value="171,0,0,80"/>
		<Setter Property="SelectionMode" Value="None"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource GridViewItemStyle}"/>
	</Style>

	<Style x:Key="SnappedGridViewStyle" TargetType="GridView">
		<Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled"/>
		<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
		<Setter Property="SelectionMode" Value="None"/>
		<Setter Property="Padding" Value="0,6,0,16"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource SnappedGridViewItemStyle}"/>
	</Style>

	<Style x:Key="ExampleViewPortraitGridViewStyle" BasedOn="{StaticResource BasePortraitGridViewStyle}" TargetType="GridView">
		<Setter Property="Padding" Value="116,160,80,0"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource ZoomedOutViewGridViewItemStyle}"/>
		<Setter Property="ItemTemplate" Value="{StaticResource ZoomedOutViewGridViewItemTemplate}"/>
	</Style>

	<Style x:Key="ExampleViewSnappedGridViewStyle" BasedOn="{StaticResource BasePortraitGridViewStyle}" TargetType="GridView">
		<Setter Property="Padding" Value="16,0,0,0"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource ZoomedOutViewGridViewItemStyle}"/>
		<Setter Property="ItemTemplate">
			<Setter.Value>
				<DataTemplate>
					<Grid Width="260" Height="50" Background="{StaticResource ItemInvertedBackgroundBrush}">
						<Border BorderThickness="1" BorderBrush="#33FFFFFF">
							<Grid>
								<TextBlock Margin="20,0" Text="{Binding ExampleInfo.HeaderText}" Style="{StaticResource TitleTextStyle}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
								<!--Favourite mark-->
								<TextBlock Margin="0 0 8 0" Text="&#xE0B4;" FontFamily="Segoe UI Symbol" VerticalAlignment="Center" HorizontalAlignment="Right" 
							   Visibility="{Binding ExampleInfo.IsFavourite, Converter={StaticResource BooleanToVisibilityConverter}}" />
							</Grid>
						</Border>
					</Grid>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridView">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
						<ScrollViewer Margin="0,120,0,0" x:Name="ScrollViewer" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}" IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" TabNavigation="{TemplateBinding TabNavigation}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
							<ItemsPresenter HeaderTemplate="{TemplateBinding HeaderTemplate}" Header="{TemplateBinding Header}" HeaderTransitions="{TemplateBinding HeaderTransitions}" Padding="{TemplateBinding Padding}"/>
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--COMBOBOX STYLES-->
	<Style x:Key="BaseComboBoxStyle" TargetType="ComboBox">
		<Setter Property="Padding" Value="8,0"/>
		<Setter Property="Foreground" Value="{StaticResource ComboBoxForegroundThemeBrush}"/>
		<Setter Property="Background" Value="{StaticResource ComboBoxBackgroundThemeBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ComboBoxBorderThemeBrush}"/>
		<Setter Property="BorderThickness" Value="{StaticResource ComboBoxBorderThemeThickness}"/>
		<Setter Property="TabNavigation" Value="Once"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
		<Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
		<Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<CarouselPanel/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="32"/>
						</Grid.ColumnDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPointerOverBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Highlight">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxSelectedPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>-->
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedBackground"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownGlyph">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxArrowPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownGlyph">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxArrowDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Highlight"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxFocusedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="FocusedPressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="PointerFocused"/>
								<VisualState x:Name="FocusedDropDown">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopupBorder">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DropDownStates">
								<VisualState x:Name="Opened">
									<Storyboard>
										<SplitOpenThemeAnimation ContentTranslationOffset="0" ContentTargetName="ScrollViewer" ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Closed">
									<Storyboard>
										<SplitCloseThemeAnimation ContentTranslationOffset="40" ContentTranslationDirection="{Binding TemplateSettings.SelectedItemDirection, RelativeSource={RelativeSource Mode=TemplatedParent}}" ContentTargetName="ScrollViewer" ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
						<Rectangle x:Name="PressedBackground" Fill="{StaticResource ComboBoxPressedHighlightThemeBrush}" Margin="{TemplateBinding BorderThickness}" Opacity="0"/>
						<Border x:Name="HighlightBackground" BorderBrush="{StaticResource ListBoxItemSelectedForegroundThemeBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBoxFocusedBackgroundThemeBrush}" Grid.ColumnSpan="2" Opacity="0"/>
						<Rectangle x:Name="Highlight" Fill="{StaticResource ComboBoxPressedHighlightThemeBrush}" Margin="{TemplateBinding BorderThickness}" Opacity="0"/>
						<ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" FontFamily="Global User Interface"/>
						<TextBlock x:Name="DropDownGlyph" Grid.Column="1" Foreground="{StaticResource ComboBoxArrowForegroundThemeBrush}" FontWeight="Bold" FontSize="{StaticResource ComboBoxArrowThemeFontSize}" FontFamily="{StaticResource SymbolThemeFontFamily}" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="0,0,6,4" Text="&#xE011;" VerticalAlignment="Center"/>
						<Popup x:Name="Popup">
							<Border x:Name="PopupBorder" BorderBrush="{StaticResource ComboBoxPopupBorderThemeBrush}" BorderThickness="{StaticResource ComboBoxPopupBorderThemeThickness}" Background="{StaticResource ComboBoxPopupBackgroundThemeBrush}" HorizontalAlignment="Stretch">
								<ScrollViewer x:Name="ScrollViewer" Foreground="{StaticResource ComboBoxPopupForegroundThemeBrush}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" VerticalSnapPointsType="OptionalSingle" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalSnapPointsAlignment="Near" ZoomMode="Disabled">
									<ItemsPresenter/>
								</ScrollViewer>
							</Border>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="BaseComboBoxItemStyle" TargetType="ComboBoxItem">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="TabNavigation" Value="Local"/>
		<Setter Property="Padding" Value="8,10"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBoxItem">
					<Border x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemPointerOverForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedBackground"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
											<DiscreteObjectKeyFrame KeyTime="0" Value="#FF262626"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemSelectedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
											<DiscreteObjectKeyFrame KeyTime="0" Value="#FF262626"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemSelectedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemSelectedDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemSelectedDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedPointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
											<DiscreteObjectKeyFrame KeyTime="0" Value="#FF262626"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemSelectedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedPressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemSelectedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemSelectedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="PointerFocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="InnerGrid" Background="Transparent">
							<Rectangle x:Name="PressedBackground" Fill="{StaticResource ListBoxItemPressedBackgroundThemeBrush}" Opacity="0"/>
							<ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ExampleFilesComboBoxStyle" TargetType="ComboBox">
		<Setter Property="Padding" Value="10,0"/>
		<Setter Property="Foreground" Value="{StaticResource SecondaryForegroundBrush}"/>
		<Setter Property="FontFamily" Value="Segoe UI"/>
		<Setter Property="FontSize" Value="24"/>
		<Setter Property="Background" Value="{StaticResource ItemBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="TabNavigation" Value="Once"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
		<Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
		<Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="Height" Value="40"/>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<CarouselPanel/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="40"/>
						</Grid.ColumnDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver"/>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="FocusedPressed"/>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="PointerFocused"/>
								<VisualState x:Name="FocusedDropDown">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopupBorder">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DropDownStates">
								<VisualState x:Name="Opened">
									<Storyboard>
										<SplitOpenThemeAnimation ClosedTargetName="ContentPresenter" ContentTranslationOffset="0" ContentTargetName="ScrollViewer" ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Closed">
									<Storyboard>
										<SplitCloseThemeAnimation ClosedTargetName="ContentPresenter" ContentTranslationOffset="0" ContentTranslationDirection="{Binding TemplateSettings.SelectedItemDirection, RelativeSource={RelativeSource Mode=TemplatedParent}}" ContentTargetName="ScrollViewer" ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
						<Rectangle x:Name="PressedBackground" Fill="{StaticResource ComboBoxPressedHighlightThemeBrush}" Margin="{TemplateBinding BorderThickness}" Opacity="0" Grid.ColumnSpan="2"/>
						<Border x:Name="HighlightBackground" BorderBrush="{StaticResource ComboBoxFocusedBorderThemeBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBoxFocusedBackgroundThemeBrush}" Grid.ColumnSpan="2" Opacity="0"/>
						<Rectangle x:Name="Highlight" Fill="{StaticResource ComboBoxSelectedBackgroundThemeBrush}" Margin="{TemplateBinding BorderThickness}" Opacity="0"/>
						<ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						<TextBlock x:Name="DropDownGlyph" Grid.Column="1" Foreground="{StaticResource MainForegroundBrush}" FontWeight="Bold" FontFamily="{StaticResource SymbolThemeFontFamily}" HorizontalAlignment="Center" IsHitTestVisible="False" Text="&#xE011;" VerticalAlignment="Center" Margin="0,-5,0,0" FontSize="30"/>
						<Popup x:Name="Popup">
							<Border x:Name="PopupBorder" BorderBrush="{StaticResource ComboBoxPopupBorderThemeBrush}" BorderThickness="2" Background="{StaticResource ComboBoxPopupBackgroundThemeBrush}" HorizontalAlignment="Stretch">
								<ScrollViewer x:Name="ScrollViewer" Foreground="{StaticResource ComboBoxPopupForegroundThemeBrush}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" VerticalSnapPointsType="OptionalSingle" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalSnapPointsAlignment="Near" ZoomMode="Disabled">
									<ItemsPresenter/>
								</ScrollViewer>
							</Border>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		
	</Style>
	<SolidColorBrush x:Key="ItemHoverBrush" Color="#FFDEDEDE"/>
	<Style x:Key="ExampleFilesComboBoxItemStyle" TargetType="ComboBoxItem">
		<Setter Property="Background" Value="{StaticResource MainBackgroundBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource SecondaryForegroundBrush}"/>
		<Setter Property="TabNavigation" Value="Local"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="FontFamily" Value="Segoe UI"/>
		<Setter Property="FontSize" Value="24"/>
		<Setter Property="MinWidth" Value="280"/>
		<Setter Property="Height" Value="40"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBoxItem">
					<Border x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HoverBackground"/>
									   
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HoverBackground"/>
									   
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckMark"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedUnfocused"/>
								<VisualState x:Name="SelectedDisabled"/>
								<VisualState x:Name="SelectedPointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckMark"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedPressed">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckMark"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="PointerFocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="InnerGrid" Background="Transparent">
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="40"/>
							</Grid.ColumnDefinitions>
							<Rectangle x:Name="HoverBackground" Grid.ColumnSpan="2" Fill="{StaticResource ApplicationPointerOverForegroundThemeBrush}" Opacity="0" />
							<TextBlock x:Name="CheckMark" FontFamily="Segoe UI Symbol" Text="&#xE10B;" FontSize="{TemplateBinding FontSize}" Foreground="{StaticResource MainForegroundBrush}" Opacity="0" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1"/>
							
						   
							<ContentPresenter FontSize="24" Foreground="{StaticResource SecondaryForegroundBrush}" x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="8,2,0,0"/>    
							
							
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ViewCodeToggleButtonLandscapeStyle" TargetType="ToggleButton" >
		<Setter Property="Background" Value="{StaticResource ToggleButtonBackgroundThemeBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource ToggleButtonForegroundThemeBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ToggleButtonBorderThemeBrush}"/>
		<Setter Property="BorderThickness" Value="{StaticResource ToggleButtonBorderThemeThickness}"/>
		<Setter Property="Padding" Value="12,4,12,5"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonPressedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonDisabledBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonCheckedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonCheckedBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonCheckedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonCheckedPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonCheckedPointerOverBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonCheckedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonCheckedPressedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonCheckedPressedBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonCheckedPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonCheckedDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonDisabledBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonCheckedDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Indeterminate"/>
								<VisualState x:Name="IndeterminatePointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="IndeterminatePressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonPressedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="IndeterminateDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonDisabledBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="PointerFocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" >
							<Grid>
								<TextBlock Text="&#xE088;"/>
								<ContentPresenter Margin="20 0 0 0" x:Name="ContentPresenter" Content="View Code" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Grid>
						</Border>
						<Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
						<Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ViewCodeToggleButtonPortraitStyle" TargetType="ToggleButton" BasedOn="{StaticResource AppBarToggleButtonStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid x:Name="RootGrid" Width="100" Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ApplicationViewStates">
								<VisualState x:Name="FullScreenLandscape"/>
								<VisualState x:Name="Filled"/>
								<VisualState x:Name="FullScreenPortrait">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Snapped">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0" Value="0.7"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Text">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Split Screen"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content1" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Text">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Split Screen"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content1" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0" Value="0.7"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Text">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Split Screen"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content1" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Text">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Split Screen"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content1" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="FocusVisualWhite"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0"/>
										<DoubleAnimation
											Storyboard.TargetName="FocusVisualBlack"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="PointerFocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<StackPanel VerticalAlignment="Top" Margin="0,12,0,11">
							<Grid Width="40" Height="40" Margin="0,0,0,5" HorizontalAlignment="Center">
								<TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" FontFamily="Segoe UI Symbol" FontSize="53.333" Margin="-4,-19,0,0" Foreground="{StaticResource AppBarItemBackgroundThemeBrush}"/>
								<TextBlock x:Name="OutlineGlyph" Text="&#xE0A7;" FontFamily="Segoe UI Symbol" FontSize="53.333" Margin="-4,-19,0,0"/>
								<ContentPresenter x:Name="Content1" HorizontalAlignment="Center" Visibility="Collapsed" Content="&#xE0CD;" FontSize="20" Margin="-3,-2,0,0" VerticalAlignment="Center"/>
								<ContentPresenter x:Name="Content" HorizontalAlignment="Center" Content="&#xE0F8;" FontSize="28" Margin="-3,-6,0,0" VerticalAlignment="Center"/>
							</Grid>
							<TextBlock
								x:Name="TextLabel"
								Text="Full Screen"
								Foreground="{StaticResource AppBarItemForegroundThemeBrush}"
								Margin="0,0,2,0"
								FontSize="12"
								TextAlignment="Center"
								Width="88"
								MaxHeight="32"
								TextTrimming="WordEllipsis"
								Style="{StaticResource BasicTextStyle}"/>
						</StackPanel>
						<Rectangle
								x:Name="FocusVisualWhite"
								IsHitTestVisible="False"
								Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
								StrokeEndLineCap="Square"
								StrokeDashArray="1,1"
								Opacity="0"
								StrokeDashOffset="1.5"/>
						<Rectangle
								x:Name="FocusVisualBlack"
								IsHitTestVisible="False"
								Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
								StrokeEndLineCap="Square"
								StrokeDashArray="1,1"
								Opacity="0"
								StrokeDashOffset="0.5"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="WelcomeMessagePlaceholder" TargetType="ContentControl">
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Width" Value="490"/>
		<Setter Property="Padding" Value="205,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ContentControl">
					<Grid>
						<Border Background="{TemplateBinding Background}" RenderTransformOrigin="0,0">
							<Border.RenderTransform>
								<CompositeTransform SkewX="15"/>
							</Border.RenderTransform>
						</Border>
						<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="64,0,0,0"/>
						<!--<Path Data="M11.2584,0 L13,6.50002 L0,6.50002 z" Fill="Black" HorizontalAlignment="Left" Height="6.5" Margin="0,-6.5,0,0" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Top" Width="13" />-->
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Height" Value="236"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="Background" Value="{StaticResource ItemInvertedBackgroundBrush}"/>
	</Style>

	<Style x:Key="InfoPlaceholder" TargetType="ContentControl">
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Width" Value="350"/>
		<Setter Property="Margin" Value="-350,0,0,0"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ContentControl">
					<Grid>
						<Border Height="768" Background="White" Margin="-205,0,30,0"/>
						<Rectangle Fill="White" Width="320" HorizontalAlignment="Left" RenderTransformOrigin="0,0">
							<Rectangle.RenderTransform>
								<CompositeTransform SkewX="15"/>
							</Rectangle.RenderTransform>
						</Rectangle>
						<!--<Border Margin="0,0,-205,0">
							<Border.Clip>
								<RectangleGeometry Rect="-205,0,480,768">
									<RectangleGeometry.Transform>
										<CompositeTransform CenterX="-205.00003051757813" SkewX="15"/>
									</RectangleGeometry.Transform>
								</RectangleGeometry>
							</Border.Clip>
							<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

							</ContentPresenter>
						</Border>-->
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style TargetType="Path" x:Key="BackgroundPathStyle">
		<Setter Property="Fill" Value="#FFf0f0f0"/>
	</Style>

	<Style x:Key="ControlsPlaceholder" TargetType="ContentControl">
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Width" Value="Auto"/>
		<Setter Property="Padding" Value="205,0,0,0"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ContentControl">
					<Grid>

						<Rectangle Grid.Column="1" x:Name="rectangle" Fill="{StaticResource MainBackgroundBrush}" Margin="{TemplateBinding Tag}">
							<Rectangle.RenderTransform>
								<CompositeTransform SkewX="15"/>
							</Rectangle.RenderTransform>
							
						</Rectangle>
						<helpers:ActualSizePropertyProxy x:Name="rectangleProxy" Element="{Binding ElementName=rectangle}"/>
						<Path Grid.ColumnSpan="3" Stretch="Fill" Style="{StaticResource BackgroundPathStyle}" Data="F1 M 1256.02,-308.954L 1256.19,-309.069L 1256.73,-309.429L 1256.02,-309.697L 1256.02,-310.591L 1255.16,-310.019L 1079.91,-375.737L 1080.44,-377.181L 1079.39,-375.936L 1079.3,-375.967L 1079.96,-376.749L 836.021,-310.219L 836.021,-311.187L 835.213,-310.218L 638.718,-375.716L 638.99,-376.106L 638.552,-375.986L 638.6,-376.711L 638.057,-375.937L 637.885,-375.994L 637.872,-375.8L 395.951,-309.822L 395.919,-309.832L 395.672,-310.265L 395.357,-310.02L 197.354,-376.022L 197.354,-376.905L 196.56,-376.287L 196.021,-376.466L 196.021,-375.867L 195.521,-375.479L -23.3988,-375.479L -22.9657,-376.104L -23.484,-375.963L -23.5511,-376.43L -23.9657,-375.831L -266.218,-309.761L -266.254,-309.94L -266.547,-309.713L -420.837,-353.797L -421.177,-353.894L -465.31,-155.305L -465.638,-155.395L -465.468,-154.997L -465.791,-154.745L -465.455,-154.653L -465.586,-154.06L -465.196,-154.364L -399.295,-0.594727L -399.657,-0.413757L -399.252,-0.24054L -465.091,285.06L -466.335,285.844L -466.646,286.041L -466.646,287.524L -467.401,288.278L -466.646,287.802L -466.646,509.259L -465.652,507.768L -465.221,507.529L -399.233,661.502L -399.321,661.679L -399.252,661.709L -465.364,948.189L -466.295,949.12L -465.519,948.861L -465.646,949.414L -464.881,948.649L -291.635,890.9L -266.882,882.649L -266.923,882.938L -266.41,882.535L -68.4235,948.532L -68.5823,948.754L -68.3799,948.736L -69.0153,950.515L -67.762,948.752L -67.6866,948.776L -67.6488,948.67L 174.278,926.676L 174.134,926.99L 174.552,926.791L 174.642,927.48L 175.045,926.607L 175.199,926.593L 175.185,926.489L 560.928,742.801L 561.116,742.935L 561.224,742.66L 561.616,742.473L 561.367,742.295L 601.619,639.831L 601.73,639.856L 601.751,639.541L 678.703,492.95L 678.811,493.082L 678.945,492.551L 939.791,316.202L 939.941,316.256L 940.031,316.041L 940.471,315.742L 940.195,315.644L 1002.47,165.431L 1002.61,165.457L 1002.6,165.296L 1003.65,164.98L 1002.91,164.838L 1255.81,-110.054L 1256.02,-110.037L 1256.02,-110.284L 1256.25,-110.535L 1256.71,-111.037L 1256.02,-111.095L 1256.02,-308.954 Z M 335.457,849.43L 175.514,925.594L 194.495,884.578L 334.928,581.111L 560.308,742.358L 335.457,849.43 Z M -463.826,947.594L -250.793,734.562C -249.724,736.141 -248.09,737.3 -246.185,737.768L -266.776,881.911L -291.846,890.267L -463.826,947.594 Z M 634.623,-327.077L 616.813,-59.9352C 616.022,-60.0543 615.216,-60.1358 614.39,-60.1358C 610.084,-60.1358 606.181,-58.445 603.28,-55.7054L 536.976,-110.957L 484.639,-154.572L 484.565,-154.702L 485.334,-155.479L 484.552,-155.479L 637.777,-374.371L 634.623,-327.077 Z M 966.113,-125.304C 966.574,-123.739 967.182,-122.239 967.932,-120.822L 687.998,27.971L 608.893,70.0173C 608.396,69.3233 607.872,68.6494 607.321,67.9984L 826.869,-81.5484C 829.002,-78.279 832.686,-76.1143 836.881,-76.1143C 843.483,-76.1143 848.833,-81.4632 848.833,-88.0667C 848.833,-89.3122 848.642,-90.512 848.289,-91.6409L 915.117,-110.735L 966.113,-125.304 Z M 733.205,246.986L 625.067,290.92C 624.595,289.97 623.94,289.13 623.14,288.45L 600.119,170.21L 590.215,119.336C 596.94,117.8 602.847,114.127 607.188,109.065L 734.909,238.268C 733.699,240.137 732.989,242.358 732.989,244.75C 732.989,245.516 733.069,246.261 733.205,246.986 Z M 334.661,580.101L 334.605,580.223L 333.276,579.929L 334.099,580.517L 298.051,594.461L 165.467,645.742C 164.271,643.353 162.712,641.177 160.834,639.315L 390.629,451.595C 391.833,452.854 393.31,453.844 394.966,454.482L 334.665,580.103L 334.661,580.101 Z M 826.523,-82.1195L 709.162,-2.17871L 606.881,67.4907C 601.076,60.9184 592.591,56.7692 583.131,56.7692C 579.201,56.7692 575.441,57.4899 571.968,58.7972L 826.307,-82.5016C 826.376,-82.3721 826.45,-82.2464 826.523,-82.1195 Z M 614.39,405.642C 608.149,405.642 603.032,410.427 602.493,416.53L 410.989,441.082C 410.729,439.724 410.235,438.451 409.558,437.299L 522.567,360.713L 612.432,299.813C 613.855,301.293 615.851,302.219 618.067,302.219C 619.767,302.219 621.333,301.672 622.616,300.753L 618.912,362.797L 616.345,405.815C 615.707,405.711 615.057,405.642 614.39,405.642 Z M 269.497,73.5557L 323.032,82.072C 322.612,83.5146 322.375,85.0367 322.375,86.6162C 322.375,89.5966 323.194,92.3793 324.597,94.7784L 269.005,135.315C 265.438,131.063 260.449,128.058 254.769,127.009L 258.884,83.7972C 264.368,83.2445 268.746,78.9808 269.497,73.5557 Z M 438.583,132.5L 437.682,133.401L 438.306,133.054L 353.979,301.711C 353.248,301.461 352.47,301.317 351.659,301.295L 341.88,102.478C 347.643,101.284 352.282,97.0295 354.028,91.49L 438.703,132.261L 438.583,132.5 Z M 199.308,495.728L 248.607,175.276C 249.173,175.315 249.739,175.362 250.315,175.362C 255.795,175.362 260.836,173.533 264.907,170.482L 346.972,302.697C 344.951,304.111 343.626,306.453 343.626,309.107C 343.626,311.207 344.458,313.11 345.804,314.515L 203.486,497.496C 202.198,496.722 200.796,496.123 199.308,495.728 Z M 338.577,102.817C 339.247,102.817 339.905,102.763 340.554,102.684L 350.329,301.373C 349.552,301.485 348.813,301.709 348.129,302.032L 265.97,169.664C 271.306,165.191 274.704,158.481 274.704,150.973C 274.704,145.489 272.872,140.446 269.817,136.372L 325.315,95.9053C 328.245,100.081 333.087,102.817 338.577,102.817 Z M 204.604,498.231L 346.81,315.395C 348.108,316.354 349.709,316.929 351.448,316.929C 352.328,316.929 353.172,316.776 353.961,316.508L 396.566,431.7C 391.263,432.92 387.302,437.66 387.302,443.338C 387.302,444.444 387.465,445.511 387.746,446.528L 208.948,502.907C 207.821,501.074 206.345,499.485 204.604,498.231 Z M 257.539,83.8518L 253.448,126.807C 252.42,126.675 251.379,126.584 250.315,126.584C 236.845,126.584 225.925,137.503 225.925,150.973C 225.925,154.267 226.587,157.403 227.77,160.27L -18.5622,283.435C -18.6312,283.302 -18.7074,283.174 -18.7835,283.046L 248.722,79.8116C 250.884,82.2574 254.026,83.8134 257.539,83.8518 Z M 231.078,165.929C 234.953,170.907 240.703,174.335 247.278,175.154L 198.005,495.435C 197.077,495.271 196.127,495.17 195.152,495.17C 190.959,495.17 187.151,496.776 184.274,499.39L -17.0375,383.185C -15.9938,381.41 -15.3844,379.349 -15.3844,377.141C -15.3844,373.789 -16.7672,370.766 -18.9879,368.595L 53.7294,309.662L 231.078,165.929 Z M 359.131,307.664C 358.695,305.326 357.222,303.353 355.204,302.245L 439.967,132.713L 517.254,199.952L 616.927,286.667C 613.82,287.123 611.315,289.396 610.519,292.378L 509.321,298.533L 359.131,307.664 Z M 17.6612,254.518L -19.1494,282.486C -19.363,282.189 -19.5954,281.908 -19.8467,281.644L 104.916,111.83C 106.046,112.463 107.345,112.827 108.731,112.827C 113.049,112.827 116.553,109.324 116.553,105.004C 116.553,104.908 116.542,104.816 116.539,104.721L 246.062,74.7093C 246.471,76.4112 247.24,77.9697 248.291,79.3005L 17.6612,254.518 Z M 189.756,526.63C 191.446,527.228 193.257,527.571 195.152,527.571C 204.1,527.571 211.354,520.319 211.354,511.37C 211.354,508.509 210.606,505.826 209.304,503.493L 387.94,447.166C 388.433,448.625 389.198,449.957 390.179,451.102L 160.334,638.861C 157.235,635.953 153.384,633.848 149.095,632.871L 150.507,629.18L 189.756,526.63 Z M 409.211,436.727C 407.07,433.507 403.411,431.385 399.255,431.385C 398.562,431.385 397.889,431.456 397.229,431.569L 354.584,316.27C 357.341,315.06 359.269,312.312 359.269,309.107C 359.269,308.844 359.255,308.584 359.23,308.328L 503.005,299.585L 610.369,293.056C 610.294,293.492 610.247,293.938 610.247,294.396C 610.247,296.258 610.899,297.967 611.985,299.31L 492.493,380.288L 409.211,436.727 Z M 618.067,286.574C 617.993,286.574 617.922,286.584 617.849,286.586L 440.274,132.097L 440.285,132.077L 552.083,94.8102C 555.026,109.264 567.807,120.141 583.131,120.141C 585.336,120.141 587.487,119.915 589.563,119.487L 622.345,287.852C 621.114,287.046 619.647,286.574 618.067,286.574 Z M 551.965,94.1468L 446.125,129.427L 442.898,130.503L 563.892,63.2842C 556.328,69.0751 551.445,78.1931 551.445,88.4561C 551.445,90.4001 551.63,92.2998 551.965,94.1468 Z M 603.264,-32.18L 439.782,131.301L 354.372,90.1761C 354.63,89.029 354.777,87.8408 354.777,86.6162C 354.777,83.7484 354.026,81.0596 352.718,78.7237L 599.936,-36.6455C 600.784,-34.9678 601.912,-33.4599 603.264,-32.18 Z M -199.556,136.026C -197.851,133.459 -196.852,130.382 -196.852,127.069C -196.852,126.661 -196.883,126.261 -196.913,125.861L 101.181,107.017C 101.671,108.86 102.808,110.438 104.345,111.481L 55.2574,178.295L -20.333,281.179C -21.7112,279.964 -23.5166,279.22 -25.4989,279.22C -27.1755,279.22 -28.7243,279.752 -29.9978,280.649L -186.899,146.822L -199.556,136.026 Z M -23.9346,294.706C -20.3643,293.982 -17.6774,290.827 -17.6774,287.042C -17.6774,285.977 -17.8916,284.964 -18.2764,284.038L 228.041,160.879C 228.757,162.487 229.647,163.994 230.678,165.395L -19.4867,368.142C -21.5876,366.309 -24.3291,365.189 -27.3376,365.189C -27.6462,365.189 -27.9495,365.213 -28.2523,365.235L -25.1884,315.185L -23.9346,294.706 Z M -25.5387,388.943C -22.141,388.429 -19.21,386.498 -17.3844,383.756L 183.755,499.861C 180.79,502.797 178.95,506.868 178.95,511.37C 178.95,514.504 179.855,517.421 181.396,519.9L 43.7463,637.882C 43.3507,637.821 42.9489,637.779 42.5361,637.779C 42.4658,637.779 42.3968,637.788 42.3265,637.789L -8.06669,453.011L -25.5387,388.943 Z M 245.717,71.9059C 245.717,72.6415 245.793,73.3583 245.921,74.0576L 185.273,88.1104L 116.489,104.048C 116.146,101.243 114.323,98.8962 111.82,97.8181L 191.11,-136.75C 192.405,-136.418 193.754,-136.222 195.152,-136.222C 197.228,-136.222 199.205,-136.627 201.029,-137.337L 255.616,60.1429C 249.996,61.1182 245.717,66.0056 245.717,71.9059 Z M 105.477,97.8974C 102.787,99.1318 100.916,101.84 100.91,104.991L -234.213,66.5902C -234.08,65.9313 -234.009,65.2497 -234.009,64.5517C -234.009,61.7725 -235.115,59.2549 -236.903,57.4014L -15.7731,-203.933C -11.486,-200.19 -5.89347,-197.906 0.243164,-197.906C 2.07263,-197.906 3.84932,-198.123 5.56413,-198.506L 67.1637,-15.7634L 105.477,97.8974 Z M -239.673,73.7418C -237.095,72.4378 -235.146,70.0862 -234.377,67.2432L 100.943,105.666C 100.962,105.9 100.995,106.13 101.035,106.358L -51.9822,116.03L -196.969,125.196C -197.899,117.133 -204.739,110.869 -213.052,110.869C -215.092,110.869 -217.035,111.261 -218.832,111.95L -220.851,108.25L -239.673,73.7418 Z M -213.052,143.27C -207.658,143.27 -202.893,140.623 -199.948,136.568L -159.572,171.007L -30.5393,281.065C -32.2386,282.499 -33.3207,284.642 -33.3207,287.042C -33.3207,288.129 -33.098,289.163 -32.6976,290.104L -145.435,341.348L -247.62,387.795C -249.923,381.91 -255.56,377.713 -262.213,377.515L -214.394,143.202C -213.95,143.239 -213.505,143.27 -213.052,143.27 Z M -104.827,323.623L -32.4086,290.705C -31.0947,293.177 -28.4951,294.864 -25.4989,294.864C -25.1976,294.864 -24.9014,294.843 -24.6091,294.809L -25.8616,315.274L -28.9248,365.306C -34.736,366.079 -39.2268,371.015 -39.2848,377.025L -246.549,394.698C -246.528,394.362 -246.498,394.03 -246.498,393.689C -246.498,391.843 -246.821,390.076 -247.39,388.424L -104.827,323.623 Z M -27.3376,389.093C -26.9547,389.093 -26.5778,389.071 -26.2047,389.035L 0.300496,486.223L 41.6475,637.832C 39.4124,638.086 37.4672,639.283 36.2093,641.013L -238.116,725.421C -238.91,724.391 -239.951,723.563 -241.155,723.032L -34.9294,386.373C -32.8649,388.072 -30.2204,389.093 -27.3376,389.093 Z M 44.5693,638.055L 181.75,520.473C 183.551,523.119 186.119,525.194 189.13,526.401L 148.44,632.718C 146.896,632.412 145.302,632.244 143.668,632.244C 131.704,632.244 121.773,640.864 119.696,652.228L 48.0596,640.064C 47.1065,639.114 45.9071,638.416 44.5693,638.055 Z M 441.522,130.504L 603.759,-31.7308C 606.605,-29.2496 610.317,-27.7354 614.39,-27.7354C 623.338,-27.7354 630.591,-34.9879 630.591,-43.9366C 630.591,-44.9868 630.483,-46.0107 630.291,-47.0048L 825.125,-85.9724C 825.302,-84.9665 825.605,-84.0062 826.018,-83.1038L 441.522,130.504 Z M 346.803,72.6774C 344.389,71.2504 341.583,70.4163 338.577,70.4163C 331.683,70.4163 325.812,74.7263 323.471,80.7919L 269.608,72.223C 269.61,72.1162 269.623,72.0128 269.623,71.9059C 269.623,69.1318 268.67,66.5862 267.086,64.5582L 481.19,-151.3L 470.375,-133.274L 346.803,72.6774 Z M 190.462,-136.917L 141.126,9.03809L 111.196,97.5844C 110.42,97.3271 109.593,97.182 108.731,97.182C 107.805,97.182 106.921,97.3513 106.096,97.6468L 88.7457,46.1741L 6.21195,-198.672C 13.471,-200.502 19.4281,-205.569 22.4566,-212.265L 180.618,-159.546C 179.56,-157.394 178.95,-154.982 178.95,-152.422C 178.95,-145.106 183.802,-138.929 190.462,-136.917 Z M -223.072,-81.2568C -219.74,-81.751 -217.175,-84.596 -217.175,-88.0667C -217.175,-89.1214 -217.43,-90.1104 -217.852,-91.0049L -20.4554,-209.442C -19.2893,-207.569 -17.8806,-205.87 -16.2672,-204.382L -237.386,56.9391C -238.78,55.6689 -240.521,54.7757 -242.454,54.4235L -227.497,-50.2783L -223.072,-81.2568 Z M 377.644,492.107L 395.595,454.713C 396.75,455.084 397.978,455.288 399.255,455.288C 405.857,455.288 411.208,449.939 411.208,443.338C 411.208,442.795 411.16,442.265 411.09,441.742L 602.459,417.207C 602.455,417.336 602.44,417.464 602.44,417.594C 602.44,419.239 602.773,420.806 603.373,422.232L 335.569,579.763L 377.644,492.107 Z M 617.005,405.938L 623.319,300.183C 624.894,298.752 625.889,296.693 625.889,294.396C 625.889,293.382 625.69,292.417 625.34,291.528L 733.356,247.645C 733.724,249.116 734.358,250.48 735.213,251.679L 621.121,407.719C 619.894,406.88 618.502,406.272 617.005,405.938 Z M 602.795,-55.2393C 599.949,-52.3206 598.188,-48.3363 598.188,-43.9366C 598.188,-41.5479 598.718,-39.2874 599.647,-37.2464L 352.369,78.1501C 351.104,76.0914 349.398,74.3376 347.373,73.0239L 482.511,-152.205L 483.16,-153.286L 484.013,-154.146L 484.108,-154.146L 562.849,-88.529L 602.795,-55.2393 Z M -224.085,-81.1546C -223.972,-81.1546 -223.867,-81.1826 -223.755,-81.1877L -231.496,-26.9964L -243.114,54.3226C -243.507,54.277 -243.907,54.247 -244.313,54.247C -248.848,54.247 -252.692,57.1833 -254.067,61.2562L -398.073,-0.460571L -229.981,-84.5068C -228.771,-82.5056 -226.594,-81.1546 -224.085,-81.1546 Z M -244.313,74.8545C -242.879,74.8545 -241.515,74.5602 -240.274,74.0316L -219.461,112.191C -225.22,114.675 -229.254,120.399 -229.254,127.069C -229.254,129.973 -228.481,132.692 -227.143,135.048L -460.079,281.9L -250.76,72.581C -248.994,74.0004 -246.754,74.8545 -244.313,74.8545 Z M -265.279,409.666C -264.437,409.8 -263.58,409.89 -262.699,409.89C -254.319,409.89 -247.427,403.528 -246.585,395.371L -57.1254,379.215L -39.2627,377.692C -39.1143,380.944 -37.6728,383.851 -35.4326,385.917L -47.8747,406.228L -241.787,722.787C -242.581,722.516 -243.428,722.362 -244.432,722.369L -257.061,532.946L -265.279,409.666 Z M -245.53,737.9C -245.132,737.963 -244.728,738.004 -244.313,738.004C -239.993,738.004 -236.49,734.503 -236.49,730.183C -236.49,728.641 -236.942,727.207 -237.713,725.995L 35.6519,641.883C 35.1339,642.84 34.8175,643.921 34.74,645.068L -266.028,881.386L -249.634,766.633L -245.53,737.9 Z M 38.2536,652.142C 39.4841,652.95 40.9541,653.422 42.5361,653.422C 46.8538,653.422 50.3565,649.921 50.3565,645.601C 50.3565,643.814 49.7511,642.174 48.7432,640.857L 98.1416,649.244L 119.595,652.887C 119.406,654.111 119.278,655.356 119.278,656.633C 119.278,663.47 122.1,669.642 126.632,674.071L -66.7659,946.198L 5.64559,743.446L 38.2536,652.142 Z M 143.457,681.012C 143.528,681.012 143.597,681.022 143.668,681.022C 157.136,681.022 168.057,670.103 168.057,656.633C 168.057,652.952 167.218,649.476 165.758,646.347L 334.13,581.22L 334.021,581.448L 334.043,581.435L 175.006,925.103L 143.457,681.012 Z M 744.942,232.798C 740.976,232.798 737.471,234.737 735.297,237.713L 640.528,141.844L 607.623,108.558C 611.692,103.606 614.281,97.3981 614.737,90.6051L 1000.87,165.123L 755.614,239.39C 753.648,235.483 749.614,232.798 744.942,232.798 Z M 207.838,-162.482L 395.276,-308.269L 482.586,-155.479L 211.056,-155.479C 210.557,-158.092 209.429,-160.478 207.838,-162.482 Z M 482.134,-154.146L 266.208,63.5485C 264.039,61.3323 261.017,59.9541 257.67,59.9541C 257.429,59.9541 257.194,59.9763 256.957,59.9899L 202.261,-137.882C 207.64,-140.517 211.354,-146.029 211.354,-152.422C 211.354,-153.005 211.32,-153.579 211.26,-154.146L 482.134,-154.146 Z M -24.1462,-222.296C -24.1462,-217.811 -22.9144,-213.622 -20.8018,-210.011L -218.17,-91.5908C -218.435,-92.0329 -218.735,-92.4476 -219.087,-92.8187L -24.3363,-374.125L -6.01001,-245.845C -16.4443,-243.08 -24.1462,-233.599 -24.1462,-222.296 Z M -220.816,141.291C -219.069,142.246 -217.123,142.877 -215.061,143.132L -262.891,377.499C -271.748,377.603 -278.9,384.806 -278.9,393.689C -278.9,396.722 -278.052,399.549 -276.602,401.976L -464.021,506.098L -220.816,141.291 Z M 34.7294,645.924C 34.8258,648.279 35.9587,650.365 37.6911,651.735L -68.0954,947.938L -265.782,882.042L 34.7294,645.924 Z M 335.704,580.463L 603.665,422.84C 605.609,426.808 609.674,429.546 614.39,429.546C 614.546,429.546 614.699,429.529 614.854,429.522L 613.394,451.789L 601.116,639.038L 335.704,580.463 Z M 1001.91,164.645L 614.78,89.9346C 614.803,89.4444 614.817,88.9521 614.817,88.4561C 614.817,81.8168 612.772,75.6566 609.282,70.5654L 968.255,-120.239C 972.438,-112.823 980.376,-107.808 989.498,-107.808C 990.281,-107.808 991.052,-107.853 991.816,-107.925L 998.799,80.6045L 1001.91,164.645 Z M 998.836,-154.726C 995.959,-155.919 992.807,-156.585 989.498,-156.585C 976.027,-156.585 965.109,-145.666 965.109,-132.196C 965.109,-130.034 965.418,-127.948 965.946,-125.95L 848.058,-92.2686C 847.316,-94.2426 846.079,-95.9736 844.481,-97.292L 1078.54,-373.901L 998.836,-154.726 Z M 824.929,-88.0667C 824.929,-87.8076 824.951,-87.5543 824.968,-87.2998L 629.979,-48.3018C 629.2,-51.0863 627.705,-53.5681 625.694,-55.5303L 834.687,-306.321L 834.687,-99.8083C 829.135,-98.7776 824.929,-93.9183 824.929,-88.0667 Z M 625.133,-56.04L 834.687,-307.505L 834.687,-307.364L 625.199,-55.9788 Z M 834.687,-309.587L 624.099,-56.8824C 622.175,-58.3278 619.928,-59.361 617.475,-59.8343L 638.492,-375.089L 834.687,-309.69L 834.687,-309.587 Z M 483.949,-155.78L 396.271,-309.218L 637.385,-374.977L 483.949,-155.78 Z M 195.152,-168.623C 189.248,-168.623 184.097,-165.454 181.265,-160.735L 22.971,-213.499C 24.0289,-216.232 24.6325,-219.19 24.6325,-222.296C 24.6325,-227.578 22.9351,-232.455 20.0804,-236.449L 196.021,-373.291L 196.021,-168.579C 195.731,-168.594 195.445,-168.623 195.152,-168.623 Z M -219.584,-93.2718C -220.594,-94.1462 -221.85,-94.7224 -223.244,-94.8936L -266.088,-309.106L -24.5556,-374.979L -219.584,-93.2718 Z M -414.714,-193.627L -266.697,-308.752L -251.908,-234.809L -223.938,-94.9632C -223.989,-94.9646 -224.035,-94.9782 -224.085,-94.9782C -226.771,-94.9782 -229.074,-93.4294 -230.218,-91.1904L -464.329,-155.038L -414.714,-193.627 Z M -230.509,-90.5784C -230.814,-89.7979 -230.996,-88.9554 -230.996,-88.0667C -230.996,-86.9971 -230.733,-85.9971 -230.3,-85.0934L -398.082,-1.20148L -398.698,-0.893494L -464.482,-154.388L -230.509,-90.5784 Z M -464.852,286.671L -226.35,136.312C -225.253,137.886 -223.884,139.256 -222.311,140.354L -465.313,504.856L -465.313,287.132L -464.852,286.671 Z M -398.409,661.345L -271.405,407.338C -269.763,408.386 -267.928,409.159 -265.954,409.562L -245.099,722.401C -247.068,722.598 -248.816,723.532 -250.08,724.914L -379.349,669.513L -398.409,661.345 Z M -67.1995,947.96L 127.129,674.522C 131.274,678.356 136.742,680.759 142.781,680.978L 174.449,925.991L 126.093,930.387L -67.1995,947.96 Z M 606.021,574.414L 615.526,429.489C 618.841,429.176 621.757,427.508 623.726,425.046L 644.014,450.104L 678.242,492.394L 601.859,637.899L 606.021,574.414 Z M 678.489,491.624L 642.954,447.735L 624.14,424.491C 625.522,422.542 626.342,420.166 626.342,417.594C 626.342,413.73 624.502,410.305 621.659,408.121L 735.638,252.245C 736.367,253.15 737.224,253.946 738.185,254.604L 718.768,331.7L 678.489,491.624 Z M 1002.56,164.23L 1000.48,108.023L 992.481,-108.008C 1003.9,-109.403 1012.86,-118.671 1013.79,-130.223L 1254.97,-110.125L 1002.56,164.23 Z M 1254.69,-111.486L 1013.85,-131.556C 1013.86,-131.77 1013.89,-131.98 1013.89,-132.196C 1013.89,-136.926 1012.52,-141.326 1010.19,-145.065L 1254.69,-308.065L 1254.69,-111.486 Z M 1009.44,-146.207C 1006.93,-149.782 1003.48,-152.644 999.445,-154.45L 1079.69,-375.111L 1254.48,-309.563L 1009.44,-146.207 Z M 1079.28,-375.938L 1079.2,-375.713L 843.88,-97.7419L 1078.58,-375.111L 1079.28,-375.938 Z M 842.751,-98.4717C 841.017,-99.4521 839.017,-100.019 836.881,-100.019C 836.591,-100.019 836.306,-99.9958 836.021,-99.9749L 836.021,-307.922L 837.008,-309.106L 1076.17,-374.334L 842.751,-98.4717 Z M 206.834,-163.629C 204.367,-166.201 201.062,-167.951 197.354,-168.456L 197.354,-374.328L 197.613,-374.53L 393.879,-309.108L 206.834,-163.629 Z M 193.806,-374.146L 18.8369,-238.058C 14.3629,-243.33 7.69889,-246.685 0.243164,-246.685C -1.45471,-246.685 -3.11096,-246.509 -4.71122,-246.179L -22.9919,-374.146L 193.806,-374.146 Z M -420.68,-353.058L -267.199,-309.206L -464.534,-155.723L -420.68,-353.058 Z M -398.63,0.0263672L -254.257,61.9001C -254.483,62.7477 -254.615,63.6332 -254.615,64.5517C -254.615,67.5589 -253.319,70.2562 -251.264,72.1397L -462.636,283.512L -464.291,284.555L -398.63,0.0263672 Z M -276.255,402.547C -275.12,404.28 -273.662,405.78 -271.966,406.966L -398.841,660.719L -464.635,507.203L -276.255,402.547 Z M -398.63,661.976L -266.653,718.537L -250.527,725.448C -251.53,726.763 -252.133,728.4 -252.133,730.183C -252.133,731.559 -251.774,732.852 -251.15,733.976L -464.474,947.3L -398.63,661.976 Z M 560.808,741.896L 336.313,581.283L 600.959,639.688L 560.808,741.896 Z M 679.19,491.58L 713.543,355.174L 738.778,254.977C 740.58,256.064 742.685,256.702 744.942,256.702C 749.754,256.702 753.889,253.854 755.784,249.758L 840.866,280.48L 939.013,315.925L 679.19,491.58 Z M 939.569,315.412L 831.199,276.28L 756.052,249.141C 756.59,247.78 756.894,246.302 756.894,244.75C 756.894,243.062 756.54,241.459 755.909,240.002L 1001.69,165.574L 939.569,315.412 Z "
							Width="936" Height="718" HorizontalAlignment="Left" VerticalAlignment="Top" UseLayoutRounding="False" Margin="0,0,-100000,0">
							<Path.Clip>
								<RectangleGeometry Rect="{Binding ActualWidthValue, ElementName=rectangleProxy, Converter={StaticResource DoubleToRectConverter},ConverterParameter='ControlPlaceholderPathClip'}">
									<RectangleGeometry.Transform>
										<CompositeTransform CenterY="0" CenterX="0" SkewX="15"/>
									</RectangleGeometry.Transform>
								</RectangleGeometry>
							</Path.Clip>
						</Path>
						<ContentPresenter Grid.Column="1" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="Height" Value="768"/>
	</Style>

	<Style x:Key="HomeScreenScrollViewerStyle" TargetType="ScrollViewer">
		<Setter Property="HorizontalScrollMode" Value="Enabled"/>
		<Setter Property="VerticalScrollMode" Value="Enabled"/>
		<Setter Property="IsHorizontalRailEnabled" Value="True"/>
		<Setter Property="IsVerticalRailEnabled" Value="True"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="ZoomMode" Value="Enabled"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="ZoomMode" Value="Disabled"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollViewer">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ScrollingIndicatorStates">
								<VisualStateGroup.Transitions>
									<VisualTransition From="MouseIndicator" To="NoIndicator">
										<Storyboard>
											<FadeOutThemeAnimation BeginTime="0:0:3" TargetName="ScrollBarSeparator"/>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="VerticalScrollBar">
												<DiscreteObjectKeyFrame KeyTime="0:0:3">
													<DiscreteObjectKeyFrame.Value>
														<ScrollingIndicatorMode>None</ScrollingIndicatorMode>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="HorizontalScrollBar">
												<DiscreteObjectKeyFrame KeyTime="0:0:3">
													<DiscreteObjectKeyFrame.Value>
														<ScrollingIndicatorMode>None</ScrollingIndicatorMode>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="TouchIndicator" To="NoIndicator">
										<Storyboard>
											<FadeOutThemeAnimation TargetName="ScrollBarSeparator"/>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="VerticalScrollBar">
												<DiscreteObjectKeyFrame KeyTime="0:0:0.5">
													<DiscreteObjectKeyFrame.Value>
														<ScrollingIndicatorMode>None</ScrollingIndicatorMode>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="HorizontalScrollBar">
												<DiscreteObjectKeyFrame KeyTime="0:0:0.5">
													<DiscreteObjectKeyFrame.Value>
														<ScrollingIndicatorMode>None</ScrollingIndicatorMode>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="NoIndicator">
									<Storyboard>
										<FadeOutThemeAnimation TargetName="ScrollBarSeparator"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TouchIndicator">
									<Storyboard>
										<FadeOutThemeAnimation TargetName="ScrollBarSeparator"/>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="VerticalScrollBar">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<ScrollingIndicatorMode>TouchIndicator</ScrollingIndicatorMode>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="HorizontalScrollBar">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<ScrollingIndicatorMode>TouchIndicator</ScrollingIndicatorMode>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseIndicator">
									<Storyboard>
										<FadeInThemeAnimation TargetName="ScrollBarSeparator"/>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="VerticalScrollBar">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="HorizontalScrollBar">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid Background="{TemplateBinding Background}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<ScrollContentPresenter x:Name="ScrollContentPresenter" Height="768" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" Grid.RowSpan="2"/>
							<ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" HorizontalAlignment="Right" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}"/>
							<ScrollBar x:Name="HorizontalScrollBar" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}"/>
							<Border x:Name="ScrollBarSeparator" BorderBrush="{StaticResource ScrollBarTrackBorderThemeBrush}" BorderThickness="0,0,1,1" Background="{StaticResource ScrollBarTrackBackgroundThemeBrush}" Grid.Column="1" Grid.Row="1"/>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<DataTemplate x:Key="DownloadTrialTemplate">
		<Grid Height="36" Background="Transparent">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<Path VerticalAlignment="Center" Height="25" Width="21" Margin="0,2,0,0" Stretch="Fill" 
				  Data="F1 M 406.604,284.622L 401.114,284.622L 401.114,269.598L 388.219,269.598L 388.219,284.622L 382.729,284.622L 394.667,296.58L 406.604,284.622 Z M 404.546,294.192L 404.546,299.593L 384.787,299.593L 384.787,294.192L 380.644,294.192L 380.644,303.735L 408.689,303.735L 408.689,294.192L 404.546,294.192 Z " Fill="{StaticResource AccentBrush}" />
			<TextBlock VerticalAlignment="Center" Margin="10,10,0,10" Text="{StaticResource DownloadTrialString}" Grid.Column="1" Style="{StaticResource TitleTextStyle}" Foreground="{StaticResource AccentBrush}"/>
		</Grid>
	</DataTemplate>

	<DataTemplate x:Key="FeedbackPortalTemplate">
		<Grid Height="36" Background="Transparent">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<Path Width="30" Height="25" Margin="0,2,0,0" Stretch="Fill" Fill="{StaticResource AccentBrush}" Data="F1 M 412.476,281.856L 391.434,281.856L 391.434,295.398L 402.558,295.398L 403.329,295.398L 403.969,295.827L 408.388,298.785L 408.388,297.934L 408.388,295.398L 410.924,295.398L 412.476,295.398L 412.476,281.856 Z M 415.012,279.32L 415.012,297.934L 410.924,297.934L 410.924,303.534L 402.558,297.934L 388.898,297.934L 388.898,279.32L 415.012,279.32 Z M 386.478,293.248L 379.113,298.178L 379.113,291.616L 374.321,291.616L 374.321,269.8L 404.927,269.8L 404.927,276.956L 402.391,276.956L 402.391,272.336L 376.857,272.336L 376.857,289.08L 379.113,289.08L 381.648,289.08L 381.648,291.616L 381.648,293.429L 386.478,290.196L 386.478,293.248 Z "/>
			<TextBlock VerticalAlignment="Center" Margin="10,10,0,10" Text="{StaticResource FeedbackPortalString}" Grid.Column="1" Style="{StaticResource TitleTextStyle}" Foreground="{StaticResource AccentBrush}"/>
		</Grid>
	</DataTemplate>

    <DataTemplate x:Key="DownloadTrialSmallTemplate">
        <Grid Height="36" Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Path VerticalAlignment="Center" Height="25" Width="21" Margin="0,2,0,0" Stretch="Fill" 
				  Data="F1 M 406.604,284.622L 401.114,284.622L 401.114,269.598L 388.219,269.598L 388.219,284.622L 382.729,284.622L 394.667,296.58L 406.604,284.622 Z M 404.546,294.192L 404.546,299.593L 384.787,299.593L 384.787,294.192L 380.644,294.192L 380.644,303.735L 408.689,303.735L 408.689,294.192L 404.546,294.192 Z " Fill="{StaticResource AccentBrush}" />
            
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="FeedbackPortalSmallTemplate">
        <Grid Height="36" Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Path Width="30" Height="25" Margin="0,2,0,0" Stretch="Fill" Fill="{StaticResource AccentBrush}" Data="F1 M 412.476,281.856L 391.434,281.856L 391.434,295.398L 402.558,295.398L 403.329,295.398L 403.969,295.827L 408.388,298.785L 408.388,297.934L 408.388,295.398L 410.924,295.398L 412.476,295.398L 412.476,281.856 Z M 415.012,279.32L 415.012,297.934L 410.924,297.934L 410.924,303.534L 402.558,297.934L 388.898,297.934L 388.898,279.32L 415.012,279.32 Z M 386.478,293.248L 379.113,298.178L 379.113,291.616L 374.321,291.616L 374.321,269.8L 404.927,269.8L 404.927,276.956L 402.391,276.956L 402.391,272.336L 376.857,272.336L 376.857,289.08L 379.113,289.08L 381.648,289.08L 381.648,291.616L 381.648,293.429L 386.478,290.196L 386.478,293.248 Z "/>
            
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="LearnMoreDataTemplate">
		<Grid Height="36" Background="Transparent">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<Path Data="F1M13.6543,8.0181L9.8243,5.5171C9.3623,6.2371,9.0943,7.0961,9.0943,8.0181C9.0943,10.5621,11.1363,12.6251,13.6543,12.6251C16.1723,12.6251,18.2133,10.5621,18.2133,8.0181C18.2133,5.4731,16.1723,3.4111,13.6543,3.4111C12.8083,3.4111,13.5003,3.5001,12.5003,3.5001z M2.8483,7.6001C5.4573,10.8561,9.3113,13.6551,13.5323,13.6551C19.2833,13.6551,23.0053,9.3011,24.2243,7.6251C21.6293,4.5391,17.8123,2.3691,13.5323,2.3691C7.9693,2.3691,4.1773,6.0691,2.8483,7.6001 M13.5323,15.9761C8.1803,15.9761,3.1773,12.2061,0.000299999999999301,7.5001C3.5343,2.4931,8.7383,9.99999999997669E-05,13.5323,9.99999999997669E-05C18.3463,9.99999999997669E-05,23.5903,2.4951,27.0003,7.5001C24.0763,12.4241,19.0763,15.9761,13.5323,15.9761"
				Fill="{StaticResource AccentBrush}" Height="15.976" Margin="0,7,0,0" Stretch="Fill" Width="27"/>
			<TextBlock VerticalAlignment="Center" IsHitTestVisible="False" Margin="10,10,0,10" Text="{StaticResource LearnMoreString}" Grid.Column="1" Style="{StaticResource TitleTextStyle}" Foreground="{StaticResource AccentBrush}">

			</TextBlock>

		</Grid>
	</DataTemplate>

	<DataTemplate x:Key="GetFromStoreDataTemplate">
		<Grid Height="36" Background="Transparent">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<Path Data="M10.666,20 L10.666,25.755 L17.333,26.667 L17.333,20 z M5.33301,20 L5.33301,25.001 L9.40802,25.604 L9.33301,20 z M9.37,13.879 L5.33301,14.746 L5.33301,18.667 L9.33301,18.667 z M17.333,12 L10.666,13.426 L10.666,18.667 L17.333,18.667 z M22.666,6.66701 L28,9.334 L28,30.667 L22.666,33.334 L0,28 L0,12 z M13.333,2.66701 C13.333,2.66701 13.256,3.822 13.333,4.00001 C12,4.00001 12.123,4.214 12,5.334 L12,8.00001 L10.666,8.00001 L10.666,5.334 C10.666,4.00001 12,2.66701 13.333,2.66701 z M10.666,0 C12.8331,0 15.6159,1.57647 15.9722,3.78401 L15.9817,3.86055 L15.9813,3.81907 C15.9871,3.48363 16.1058,2.87826 15.9994,2.66701 C17.3337,2.66701 18.6671,4.00001 18.6671,5.334 L18.6671,6.66701 L17.3337,6.66701 L17.3337,5.334 C17.3337,4.00001 17.3337,4.00001 15.9994,4.00001 L15.9987,3.99745 L15.999,3.99958 L15.999,6.66629 L14.666,7.99916 L14.666,3.99958 C14.5,2.09979 12.497,1.33384 10.666,1.33384 C8.83502,1.33384 6.86599,2.09979 6.66601,3.99958 L6.66601,7.99916 L5.333,9.33301 L5.333,3.99958 C5.57601,1.67982 8.42999,0 10.666,0 z"
				  Fill="{StaticResource AccentBrush}" Stretch="Fill" UseLayoutRounding="False" Margin="0,2,0,0" Width="21" Height="25"/>
			<TextBlock VerticalAlignment="Center" IsHitTestVisible="False" Margin="10,10,0,10" Text="{StaticResource GetFromStoreString}" Grid.Column="1" Style="{StaticResource TitleTextStyle}" Foreground="{StaticResource AccentBrush}">
				 
			</TextBlock>
			
		</Grid>
	</DataTemplate>

    <DataTemplate x:Key="GetFromStoreSmallDataTemplate">
        <Grid Height="36" Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Path Data="M10.666,20 L10.666,25.755 L17.333,26.667 L17.333,20 z M5.33301,20 L5.33301,25.001 L9.40802,25.604 L9.33301,20 z M9.37,13.879 L5.33301,14.746 L5.33301,18.667 L9.33301,18.667 z M17.333,12 L10.666,13.426 L10.666,18.667 L17.333,18.667 z M22.666,6.66701 L28,9.334 L28,30.667 L22.666,33.334 L0,28 L0,12 z M13.333,2.66701 C13.333,2.66701 13.256,3.822 13.333,4.00001 C12,4.00001 12.123,4.214 12,5.334 L12,8.00001 L10.666,8.00001 L10.666,5.334 C10.666,4.00001 12,2.66701 13.333,2.66701 z M10.666,0 C12.8331,0 15.6159,1.57647 15.9722,3.78401 L15.9817,3.86055 L15.9813,3.81907 C15.9871,3.48363 16.1058,2.87826 15.9994,2.66701 C17.3337,2.66701 18.6671,4.00001 18.6671,5.334 L18.6671,6.66701 L17.3337,6.66701 L17.3337,5.334 C17.3337,4.00001 17.3337,4.00001 15.9994,4.00001 L15.9987,3.99745 L15.999,3.99958 L15.999,6.66629 L14.666,7.99916 L14.666,3.99958 C14.5,2.09979 12.497,1.33384 10.666,1.33384 C8.83502,1.33384 6.86599,2.09979 6.66601,3.99958 L6.66601,7.99916 L5.333,9.33301 L5.333,3.99958 C5.57601,1.67982 8.42999,0 10.666,0 z"
				  Fill="{StaticResource AccentBrush}" Stretch="Fill" UseLayoutRounding="False" Margin="0,2,0,0" Width="21" Height="25"/>
        </Grid>
    </DataTemplate>

    <Style x:Key="LinkButtonStyle" TargetType="HyperlinkButton">
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="FontFamily" Value="Segoe UI"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="HyperlinkButton">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.3">
										<VisualTransition.GeneratedEasingFunction>
											<CircleEase EasingMode="EaseOut"/>
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentPresenter" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentPresenter" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="PointerFocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Foreground" Value="{StaticResource SecondaryForegroundBrush}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="FontSize" Value="18"/>
		<Setter Property="FontWeight" Value="Normal"/>
	</Style>
	<Style x:Key="DownloadTrialButtonStyle" TargetType="HyperlinkButton" BasedOn="{StaticResource LinkButtonStyle}">
        <Setter Property="NavigateUri" Value="http://www.telerik.com/download/windows-universal-ui" />
	</Style>
	<Style x:Key="FeedbackPortalButtonStyle" TargetType="HyperlinkButton" BasedOn="{StaticResource LinkButtonStyle}">
        <Setter Property="NavigateUri" Value="http://feedback.telerik.com/Project/167" />
	</Style>
	<Style x:Key="NavigationButtonStyle" TargetType="Button">
		<Setter Property="Foreground" Value="{StaticResource DefaultTextForegroundThemeBrush}"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="grid">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Border" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Border" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="PointerFocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ButtonBackgroundThemeBrush}" Opacity="0.4"/>
						<TextBlock TextWrapping="Wrap" Text="&#xE016;" FontFamily="Segoe UI Symbol" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" 
						Opacity="0.7"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Width" Value="70"/>
		<Setter Property="Height" Value="40"/>
		<Setter Property="Background" Value="{x:Null}"/>
	</Style>
	<Style x:Key="RoundButtonStyle" TargetType="Button">
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="Width" Value="48"/>
		<Setter Property="Height" Value="48"/>
		<Setter Property="VerticalAlignment" Value="Bottom"/>
		<Setter Property="FontFamily" Value="Segoe UI"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="FontSize" Value="18"/>
		<Setter Property="AutomationProperties.AutomationId" Value="BackButton"/>
		<Setter Property="AutomationProperties.Name" Value="Back"/>
		<Setter Property="AutomationProperties.ItemType" Value="Navigation Button"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="RootGrid">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.2" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground)" Storyboard.TargetName="textBlock">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource InvertedForegroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="FocusVisualWhite"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0"/>
										<DoubleAnimation
											Storyboard.TargetName="FocusVisualBlack"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="PointerFocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid>
							<Border x:Name="border" HorizontalAlignment="Center" Height="42" VerticalAlignment="Center" Width="42" CornerRadius="40" Margin="3" Background="{StaticResource SecondaryForegroundBrush}" Opacity="0"/>

							<Border HorizontalAlignment="Center" Height="42" BorderBrush="{StaticResource SecondaryForegroundBrush}" VerticalAlignment="Center" Width="42" BorderThickness="3" CornerRadius="40" Background="Transparent">
								<TextBlock x:Name="textBlock" TextWrapping="Wrap" Text="{TemplateBinding Content}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="{TemplateBinding Padding}" Foreground="{StaticResource SecondaryForegroundBrush}" FontWeight="{TemplateBinding FontWeight}"/>
							</Border>
						</Grid>
						<Rectangle
							x:Name="FocusVisualWhite"
							IsHitTestVisible="False"
							Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
							StrokeEndLineCap="Square"
							StrokeDashArray="1,1"
							Opacity="0"
							StrokeDashOffset="1.5"/>
						<Rectangle
							x:Name="FocusVisualBlack"
							IsHitTestVisible="False"
							Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
							StrokeEndLineCap="Square"
							StrokeDashArray="1,1"
							Opacity="0"
							StrokeDashOffset="0.5"/>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Content" Value="A"/>
		<Setter Property="Padding" Value="0,0,0,4"/>
	</Style>

	<DataTemplate x:Key="NewDataTemplate">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="10"/>
				<ColumnDefinition/>
				<ColumnDefinition Width="10"/>
			</Grid.ColumnDefinitions>
			<Path Data="M10,0 L14,0 14,18 10,18 0,18 z" Fill="#72C400" HorizontalAlignment="Left" Margin="0,0,-4,0" VerticalAlignment="Bottom" Height="18" Stretch="Fill" Stroke="Black" Width="14" StrokeThickness="0"/>
			<Path Data="M0,0 L4.0000001,0 14,0 4.0000001,18 0,18 z" Fill="#72C400" HorizontalAlignment="Right" Margin="-4,0,0,0" VerticalAlignment="Bottom" Grid.Column="2" Height="18" Stretch="Fill" Stroke="Black" Width="14" StrokeThickness="0"/>
			<Rectangle Fill="#72C400" HorizontalAlignment="Stretch" Width="40" Height="18" VerticalAlignment="Bottom" Grid.Column="1" StrokeThickness="0"/>
			<TextBlock Grid.Column="1" Text="New" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,5" Style="{StaticResource CaptionTextStyle}"/>
		</Grid>
	</DataTemplate>

	<DataTemplate x:Key="BetaDataTemplate">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="10"/>
				<ColumnDefinition/>
				<ColumnDefinition Width="10"/>
			</Grid.ColumnDefinitions>
			<Path Data="M10,0 L14,0 14,18 10,18 0,18 z" Fill="#FF0000" HorizontalAlignment="Left" Margin="0,0,-4,0" VerticalAlignment="Bottom" Height="18" Stretch="Fill" Stroke="Black" Width="14" StrokeThickness="0"/>
			<Path Data="M0,0 L4.0000001,0 14,0 4.0000001,18 0,18 z" Fill="#FF0000" HorizontalAlignment="Right" Margin="-4,0,0,0" VerticalAlignment="Bottom" Grid.Column="2" Height="18" Stretch="Fill" Stroke="Black" Width="14" StrokeThickness="0"/>
			<Rectangle Fill="#FF0000" HorizontalAlignment="Stretch" Width="40" Height="18" VerticalAlignment="Bottom" Grid.Column="1" StrokeThickness="0"/>
			<TextBlock Grid.Column="1" Text="Beta" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,5" Style="{StaticResource CaptionTextStyle}"/>
		</Grid>
	</DataTemplate>

	<DataTemplate x:Key="CtpDataTemplate">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="10"/>
				<ColumnDefinition/>
				<ColumnDefinition Width="10"/>
			</Grid.ColumnDefinitions>
			<Path Data="M10,0 L14,0 14,18 10,18 0,18 z" Fill="#E06E1E" HorizontalAlignment="Left" Margin="0,0,-4,0" VerticalAlignment="Bottom" Height="18" Stretch="Fill" Stroke="Black" Width="14" StrokeThickness="0"/>
			<Path Data="M0,0 L4.0000001,0 14,0 4.0000001,18 0,18 z" Fill="#E06E1E" HorizontalAlignment="Right" Margin="-4,0,0,0" VerticalAlignment="Bottom" Grid.Column="2" Height="18" Stretch="Fill" Stroke="Black" Width="14" StrokeThickness="0"/>
			<Rectangle Fill="#E06E1E" HorizontalAlignment="Stretch" Width="40" Height="18" VerticalAlignment="Bottom" Grid.Column="1" StrokeThickness="0"/>
			<TextBlock Grid.Column="1" Text="CTP" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,5" Style="{StaticResource CaptionTextStyle}"/>
		</Grid>
	</DataTemplate>

	<DataTemplate x:Key="UpdatedDataTemplate">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="10"/>
				<ColumnDefinition/>
				<ColumnDefinition Width="10"/>
			</Grid.ColumnDefinitions>
			<Path Data="M10,0 L14,0 14,18 10,18 0,18 z" Fill="#13BACF" HorizontalAlignment="Left" Margin="0,0,-4,0" VerticalAlignment="Bottom" Height="18" Stretch="Fill" Stroke="Black" Width="14" StrokeThickness="0"/>
			<Path Data="M0,0 L4.0000001,0 14,0 4.0000001,18 0,18 z" Fill="#13BACF" HorizontalAlignment="Right" Margin="-4,0,0,0" VerticalAlignment="Bottom" Grid.Column="2" Height="18" Stretch="Fill" Stroke="Black" Width="14" StrokeThickness="0"/>
			<Rectangle Fill="#13BACF" HorizontalAlignment="Stretch" Height="18" VerticalAlignment="Bottom" Grid.Column="1" StrokeThickness="0"/>
			<TextBlock Grid.Column="1" Margin="3,0,3,5" Text="Updated" HorizontalAlignment="Center" VerticalAlignment="Bottom" Style="{StaticResource CaptionTextStyle}"/>
		</Grid>
	</DataTemplate>

    <DataTemplate x:Key="UniversalDataTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="10"/>
            </Grid.ColumnDefinitions>
            <Path Data="M10,0 L14,0 14,18 10,18 0,18 z" Fill="#13BACF" HorizontalAlignment="Left" Margin="0,0,-4,0" VerticalAlignment="Bottom" Height="18" Stretch="Fill" Stroke="Black" Width="14" StrokeThickness="0"/>
            <Path Data="M0,0 L4.0000001,0 14,0 4.0000001,18 0,18 z" Fill="#13BACF" HorizontalAlignment="Right" Margin="-4,0,0,0" VerticalAlignment="Bottom" Grid.Column="2" Height="18" Stretch="Fill" Stroke="Black" Width="14" StrokeThickness="0"/>
            <Rectangle Fill="#13BACF" HorizontalAlignment="Stretch" Height="18" VerticalAlignment="Bottom" Grid.Column="1" StrokeThickness="0"/>
            <TextBlock Grid.Column="1" Margin="3,0,3,5" Text="Universal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Style="{StaticResource CaptionTextStyle}"/>
        </Grid>
    </DataTemplate>

    <selectors:StatusModeTemplateSelector x:Key="StatusBadgeTemplateSelector"
		NewDataTemplate="{StaticResource NewDataTemplate}" 
		BetaDataTemplate="{StaticResource BetaDataTemplate}"
		CtpDataTemplate="{StaticResource CtpDataTemplate}"
		UpdatedDataTemplate="{StaticResource UpdatedDataTemplate}"
        UniversalDataTemplate="{StaticResource UniversalDataTemplate}"/>
</ResourceDictionary>
